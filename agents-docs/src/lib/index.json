{
  "openapi": "3.0.0",
  "info": {
    "title": "Inkeep Chat API",
    "version": "1.0.0",
    "description": "Complete REST API for Inkeep Chat application including chat completions, A2A agent communication, and comprehensive CRUD operations for all entities"
  },
  "servers": [{ "url": "http://localhost:3002", "description": "Development server" }],
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type.",
            "example": "Resource Not Found"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code.",
            "example": 404
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "example": "The requested resource was not found."
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "example": "/conversations/123"
          },
          "requestId": {
            "type": "string",
            "description": "A unique identifier for the request, useful for troubleshooting.",
            "example": "req_1234567890"
          },
          "code": {
            "type": "string",
            "enum": [
              "bad_request",
              "unauthorized",
              "forbidden",
              "not_found",
              "conflict",
              "internal_server_error",
              "unprocessable_entity"
            ],
            "description": "A short code indicating the error code returned.",
            "example": "not_found"
          }
        },
        "required": ["title", "status", "detail", "code"]
      },
      "BadRequest": {
        "allOf": [
          { "$ref": "#/components/schemas/ProblemDetails" },
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "A short, human-readable summary of the problem type.",
                "example": "Bad Request"
              },
              "status": {
                "type": "number",
                "enum": [400],
                "description": "The HTTP status code.",
                "example": 400
              },
              "detail": {
                "type": "string",
                "description": "A detailed explanation specific to this occurrence of the problem, providing context and specifics about what went wrong.",
                "example": "Bad Request"
              },
              "code": {
                "type": "string",
                "enum": ["bad_request"],
                "description": "A short code indicating the error code returned.",
                "example": "bad_request"
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "enum": ["bad_request"],
                    "description": "A short code indicating the error code returned.",
                    "example": "bad_request"
                  },
                  "message": {
                    "type": "string",
                    "description": "A concise error message suitable for display to end users. May be truncated if the full detail is long.",
                    "example": "Bad Request"
                  }
                },
                "required": ["code", "message"],
                "description": "Legacy error format for backward compatibility."
              }
            },
            "required": ["error"]
          }
        ]
      },
      "Unauthorized": {
        "allOf": [
          { "$ref": "#/components/schemas/ProblemDetails" },
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "A short, human-readable summary of the problem type.",
                "example": "Unauthorized"
              },
              "status": {
                "type": "number",
                "enum": [401],
                "description": "The HTTP status code.",
                "example": 401
              },
              "detail": {
                "type": "string",
                "description": "A detailed explanation specific to this occurrence of the problem, providing context and specifics about what went wrong.",
                "example": "Unauthorized"
              },
              "code": {
                "type": "string",
                "enum": ["unauthorized"],
                "description": "A short code indicating the error code returned.",
                "example": "unauthorized"
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "enum": ["unauthorized"],
                    "description": "A short code indicating the error code returned.",
                    "example": "unauthorized"
                  },
                  "message": {
                    "type": "string",
                    "description": "A concise error message suitable for display to end users. May be truncated if the full detail is long.",
                    "example": "Unauthorized"
                  }
                },
                "required": ["code", "message"],
                "description": "Legacy error format for backward compatibility."
              }
            },
            "required": ["error"]
          }
        ]
      },
      "Forbidden": {
        "allOf": [
          { "$ref": "#/components/schemas/ProblemDetails" },
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "A short, human-readable summary of the problem type.",
                "example": "Forbidden"
              },
              "status": {
                "type": "number",
                "enum": [403],
                "description": "The HTTP status code.",
                "example": 403
              },
              "detail": {
                "type": "string",
                "description": "A detailed explanation specific to this occurrence of the problem, providing context and specifics about what went wrong.",
                "example": "Forbidden"
              },
              "code": {
                "type": "string",
                "enum": ["forbidden"],
                "description": "A short code indicating the error code returned.",
                "example": "forbidden"
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "enum": ["forbidden"],
                    "description": "A short code indicating the error code returned.",
                    "example": "forbidden"
                  },
                  "message": {
                    "type": "string",
                    "description": "A concise error message suitable for display to end users. May be truncated if the full detail is long.",
                    "example": "Forbidden"
                  }
                },
                "required": ["code", "message"],
                "description": "Legacy error format for backward compatibility."
              }
            },
            "required": ["error"]
          }
        ]
      },
      "NotFound": {
        "allOf": [
          { "$ref": "#/components/schemas/ProblemDetails" },
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "A short, human-readable summary of the problem type.",
                "example": "Not Found"
              },
              "status": {
                "type": "number",
                "enum": [404],
                "description": "The HTTP status code.",
                "example": 404
              },
              "detail": {
                "type": "string",
                "description": "A detailed explanation specific to this occurrence of the problem, providing context and specifics about what went wrong.",
                "example": "Not Found"
              },
              "code": {
                "type": "string",
                "enum": ["not_found"],
                "description": "A short code indicating the error code returned.",
                "example": "not_found"
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "enum": ["not_found"],
                    "description": "A short code indicating the error code returned.",
                    "example": "not_found"
                  },
                  "message": {
                    "type": "string",
                    "description": "A concise error message suitable for display to end users. May be truncated if the full detail is long.",
                    "example": "Not Found"
                  }
                },
                "required": ["code", "message"],
                "description": "Legacy error format for backward compatibility."
              }
            },
            "required": ["error"]
          }
        ]
      },
      "UnprocessableEntity": {
        "allOf": [
          { "$ref": "#/components/schemas/ProblemDetails" },
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "A short, human-readable summary of the problem type.",
                "example": "Unprocessable Entity"
              },
              "status": {
                "type": "number",
                "enum": [422],
                "description": "The HTTP status code.",
                "example": 422
              },
              "detail": {
                "type": "string",
                "description": "A detailed explanation specific to this occurrence of the problem, providing context and specifics about what went wrong.",
                "example": "Unprocessable Entity"
              },
              "code": {
                "type": "string",
                "enum": ["unprocessable_entity"],
                "description": "A short code indicating the error code returned.",
                "example": "unprocessable_entity"
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "enum": ["unprocessable_entity"],
                    "description": "A short code indicating the error code returned.",
                    "example": "unprocessable_entity"
                  },
                  "message": {
                    "type": "string",
                    "description": "A concise error message suitable for display to end users. May be truncated if the full detail is long.",
                    "example": "Unprocessable Entity"
                  }
                },
                "required": ["code", "message"],
                "description": "Legacy error format for backward compatibility."
              }
            },
            "required": ["error"]
          }
        ]
      },
      "InternalServerError": {
        "allOf": [
          { "$ref": "#/components/schemas/ProblemDetails" },
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "A short, human-readable summary of the problem type.",
                "example": "Internal Server Error"
              },
              "status": {
                "type": "number",
                "enum": [500],
                "description": "The HTTP status code.",
                "example": 500
              },
              "detail": {
                "type": "string",
                "description": "A detailed explanation specific to this occurrence of the problem, providing context and specifics about what went wrong.",
                "example": "Internal Server Error"
              },
              "code": {
                "type": "string",
                "enum": ["internal_server_error"],
                "description": "A short code indicating the error code returned.",
                "example": "internal_server_error"
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "enum": ["internal_server_error"],
                    "description": "A short code indicating the error code returned.",
                    "example": "internal_server_error"
                  },
                  "message": {
                    "type": "string",
                    "description": "A concise error message suitable for display to end users. May be truncated if the full detail is long.",
                    "example": "Internal Server Error"
                  }
                },
                "required": ["code", "message"],
                "description": "Legacy error format for backward compatibility."
              }
            },
            "required": ["error"]
          }
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "Health check",
        "description": "Check if the service is healthy and running",
        "responses": { "204": { "description": "Service is healthy" } }
      }
    },
    "/tenants/{tenantId}/projects/{projectId}/graphs/{graphId}/v1/chat/completions": {
      "post": {
        "tags": ["chat"],
        "summary": "Create chat completion",
        "description": "Creates a new chat completion with streaming SSE response using the configured agent graph",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The tenant identifier"
            },
            "required": true,
            "description": "The tenant identifier",
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "The project identifier"
            },
            "required": true,
            "description": "The project identifier",
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "The agent graph identifier"
            },
            "required": true,
            "description": "The agent graph identifier",
            "name": "graphId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "The model to use for the completion"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": ["system", "user", "assistant", "function", "tool"],
                          "description": "The role of the message"
                        },
                        "content": {
                          "anyOf": [
                            { "type": "string" },
                            {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": { "type": "string" },
                                  "text": { "type": "string" }
                                },
                                "required": ["type"],
                                "additionalProperties": false
                              }
                            }
                          ],
                          "description": "The message content"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the message sender"
                        }
                      },
                      "required": ["role", "content"]
                    },
                    "description": "The conversation messages"
                  },
                  "temperature": {
                    "type": "number",
                    "description": "Controls randomness (0-1)"
                  },
                  "top_p": {
                    "type": "number",
                    "description": "Controls nucleus sampling"
                  },
                  "n": {
                    "type": "number",
                    "description": "Number of completions to generate"
                  },
                  "stream": {
                    "type": "boolean",
                    "description": "Whether to stream the response"
                  },
                  "max_tokens": {
                    "type": "number",
                    "description": "Maximum tokens to generate"
                  },
                  "presence_penalty": {
                    "type": "number",
                    "description": "Presence penalty (-2 to 2)"
                  },
                  "frequency_penalty": {
                    "type": "number",
                    "description": "Frequency penalty (-2 to 2)"
                  },
                  "logit_bias": {
                    "type": "object",
                    "additionalProperties": { "type": "number" },
                    "description": "Token logit bias"
                  },
                  "user": {
                    "type": "string",
                    "description": "User identifier"
                  },
                  "conversationId": {
                    "type": "string",
                    "description": "Conversation ID for multi-turn chat"
                  },
                  "tools": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "Available tools"
                  },
                  "runConfig": {
                    "type": "object",
                    "additionalProperties": { "nullable": true },
                    "description": "Run configuration"
                  },
                  "requestContext": {
                    "type": "object",
                    "additionalProperties": { "nullable": true },
                    "description": "Context data for template processing (validated against context config schema)"
                  }
                },
                "required": ["model", "messages"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming chat completion response in Server-Sent Events format",
            "headers": {
              "Content-Type": {
                "schema": { "type": "string", "default": "text/event-stream" },
                "required": false
              },
              "Cache-Control": {
                "schema": { "type": "string", "default": "no-cache" },
                "required": false
              },
              "Connection": {
                "schema": { "type": "string", "default": "keep-alive" },
                "required": false
              }
            },
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "description": "Server-Sent Events stream with chat completion chunks"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request context or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": { "type": "string" },
                          "message": { "type": "string" },
                          "value": { "nullable": true }
                        },
                        "required": ["field", "message"]
                      }
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "404": {
            "description": "Agent graph or agent not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } },
                  "required": ["error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" }
                  },
                  "required": ["error", "message"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/projects/{projectId}/agents/{graphId}/{agentId}/.well-known/agent.json": {
      "get": {
        "tags": ["a2a"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "graphId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Agent Card for A2A discovery",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "url": { "type": "string" },
                    "version": { "type": "string" },
                    "defaultInputModes": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "defaultOutputModes": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "skills": { "type": "array", "items": { "nullable": true } }
                  },
                  "required": [
                    "name",
                    "url",
                    "version",
                    "defaultInputModes",
                    "defaultOutputModes",
                    "skills"
                  ]
                }
              }
            }
          },
          "404": { "description": "Agent not found" }
        }
      }
    },
    "/tenants/{tenantId}/projects/{projectId}/agents/{graphId}/.well-known/agent.json": {
      "get": {
        "tags": ["a2a", "graph"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "graphId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Agent Card for Graph-Level A2A discovery",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "url": { "type": "string" },
                    "version": { "type": "string" },
                    "defaultInputModes": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "defaultOutputModes": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "skills": { "type": "array", "items": { "nullable": true } }
                  },
                  "required": [
                    "name",
                    "url",
                    "version",
                    "defaultInputModes",
                    "defaultOutputModes",
                    "skills"
                  ]
                }
              }
            }
          },
          "404": { "description": "Graph not found" }
        }
      }
    },
    "/tenants/{tenantId}/projects/{projectId}/graphs/{graphId}/api/chat": {
      "post": {
        "tags": ["chat"],
        "summary": "Chat (Vercel Streaming Protocol)",
        "description": "Chat completion endpoint streaming with Vercel data stream protocol.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The tenant identifier"
            },
            "required": true,
            "description": "The tenant identifier",
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "The project identifier"
            },
            "required": true,
            "description": "The project identifier",
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "The agent graph identifier"
            },
            "required": true,
            "description": "The agent graph identifier",
            "name": "graphId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": { "type": "string" },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": ["system", "user", "assistant", "function", "tool"]
                        },
                        "content": { "nullable": true },
                        "parts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": ["text", "image", "audio", "video", "file"]
                                  },
                                  { "type": "string", "pattern": "^data-" }
                                ]
                              },
                              "text": { "type": "string" }
                            },
                            "required": ["type"]
                          }
                        }
                      },
                      "required": ["role"]
                    }
                  },
                  "id": { "type": "string" },
                  "conversationId": { "type": "string" },
                  "requestContext": {
                    "type": "object",
                    "additionalProperties": { "nullable": true },
                    "description": "Context data for template processing"
                  }
                },
                "required": ["messages"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streamed chat completion",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "default": "text/plain; charset=utf-8"
                },
                "required": false
              },
              "x-vercel-ai-data-stream": {
                "schema": { "type": "string", "default": "v1" },
                "required": false
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects": {
      "get": {
        "summary": "List Projects",
        "description": "List all projects within a tenant with pagination",
        "operationId": "list-projects",
        "tags": ["Projects"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of projects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": ["id", "name", "description", "createdAt", "updatedAt"],
                        "example": {
                          "id": "my-project",
                          "name": "My Project",
                          "description": "A project for managing AI agents and resources",
                          "createdAt": "2025-09-03T00:29:03.375Z",
                          "updatedAt": "2025-09-03T00:29:03.376Z"
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Project",
        "description": "Create a new project",
        "operationId": "create-project",
        "tags": ["Projects"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string", "minLength": 1 },
                  "description": { "type": "string", "minLength": 1 },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" }
                },
                "required": ["id", "name", "description"],
                "example": {
                  "id": "my-project",
                  "name": "My Project",
                  "description": "A project for managing AI agents and resources"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": ["id", "name", "description", "createdAt", "updatedAt"],
                      "example": {
                        "id": "my-project",
                        "name": "My Project",
                        "description": "A project for managing AI agents and resources",
                        "createdAt": "2025-09-03T00:29:03.375Z",
                        "updatedAt": "2025-09-03T00:29:03.376Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "409": {
            "description": "Project already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{id}": {
      "get": {
        "summary": "Get Project",
        "description": "Get a single project by ID",
        "operationId": "get-project-by-id",
        "tags": ["Projects"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Project found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": ["id", "name", "description", "createdAt", "updatedAt"],
                      "example": {
                        "id": "my-project",
                        "name": "My Project",
                        "description": "A project for managing AI agents and resources",
                        "createdAt": "2025-09-03T00:29:03.375Z",
                        "updatedAt": "2025-09-03T00:29:03.376Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Project",
        "description": "Update an existing project",
        "operationId": "update-project",
        "tags": ["Projects"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "minLength": 1 },
                  "description": { "type": "string", "minLength": 1 },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" }
                },
                "example": {
                  "name": "Updated Project Name",
                  "description": "Updated project description with more details"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": ["id", "name", "description", "createdAt", "updatedAt"],
                      "example": {
                        "id": "my-project",
                        "name": "My Project",
                        "description": "A project for managing AI agents and resources",
                        "createdAt": "2025-09-03T00:29:03.375Z",
                        "updatedAt": "2025-09-03T00:29:03.376Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Project",
        "description": "Delete a project. Will fail if the project has existing resources.",
        "operationId": "delete-project",
        "tags": ["Projects"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Project deleted successfully" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "409": {
            "description": "Cannot delete project with existing resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agents": {
      "get": {
        "summary": "List Agents",
        "operationId": "list-agents",
        "tags": ["CRUD Agent"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of agents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "instructions": { "type": "string" },
                          "conversationHistoryConfig": {
                            "anyOf": [
                              { "type": "string" },
                              { "type": "number" },
                              { "type": "boolean" },
                              { "nullable": true },
                              {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              {
                                "type": "array",
                                "items": { "nullable": true }
                              },
                              { "nullable": true }
                            ]
                          },
                          "modelSettings": {
                            "anyOf": [
                              { "type": "string" },
                              { "type": "number" },
                              { "type": "boolean" },
                              { "nullable": true },
                              {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              {
                                "type": "array",
                                "items": { "nullable": true }
                              },
                              { "nullable": true }
                            ]
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "instructions",
                          "conversationHistoryConfig",
                          "modelSettings",
                          "createdAt",
                          "updatedAt"
                        ],
                        "example": {
                          "id": "customer-support-agent",
                          "name": "Customer Support Agent",
                          "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                          "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Agent",
        "operationId": "create-agent",
        "tags": ["CRUD Agent"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "instructions": { "type": "string" },
                  "conversationHistoryConfig": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "modelSettings": {
                    "type": "object",
                    "properties": {
                      "model": { "type": "string" },
                      "structuredOutput": { "type": "string" },
                      "summarizer": { "type": "string" },
                      "providerOptions": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      }
                    }
                  },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" },
                  "type": { "type": "string", "enum": ["internal"] }
                },
                "required": ["id", "name", "description", "instructions"],
                "example": {
                  "id": "customer-support-agent",
                  "name": "Customer Support Agent",
                  "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                  "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agent created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "instructions": { "type": "string" },
                        "conversationHistoryConfig": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "modelSettings": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "instructions",
                        "conversationHistoryConfig",
                        "modelSettings",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "customer-support-agent",
                        "name": "Customer Support Agent",
                        "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                        "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agents/{id}": {
      "get": {
        "summary": "Get Agent",
        "operationId": "get-agent-by-id",
        "tags": ["CRUD Agent"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Agent found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "instructions": { "type": "string" },
                        "conversationHistoryConfig": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "modelSettings": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "instructions",
                        "conversationHistoryConfig",
                        "modelSettings",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "customer-support-agent",
                        "name": "Customer Support Agent",
                        "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                        "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Agent",
        "operationId": "update-agent",
        "tags": ["CRUD Agent"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "instructions": { "type": "string" },
                  "conversationHistoryConfig": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "modelSettings": {
                    "type": "object",
                    "properties": {
                      "model": { "type": "string" },
                      "structuredOutput": { "type": "string" },
                      "summarizer": { "type": "string" },
                      "providerOptions": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      }
                    }
                  },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" },
                  "type": { "type": "string", "enum": ["internal"] }
                },
                "example": {
                  "name": "Enhanced Customer Support Agent",
                  "description": "An improved AI agent specialized in handling customer support inquiries with enhanced problem-solving capabilities",
                  "instructions": "You are an enhanced customer support agent with access to advanced tools. Be polite, professional, and empathetic. Use available tools to look up customer information, order history, and process refunds when appropriate. Always aim to resolve issues on the first contact."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agent updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "instructions": { "type": "string" },
                        "conversationHistoryConfig": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "modelSettings": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "instructions",
                        "conversationHistoryConfig",
                        "modelSettings",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "customer-support-agent",
                        "name": "Customer Support Agent",
                        "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                        "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Agent",
        "operationId": "delete-agent",
        "tags": ["CRUD Agent"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Agent deleted successfully" },
          "404": {
            "description": "Agent not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-relations": {
      "get": {
        "summary": "List Agent Relations",
        "operationId": "list-agent-relations",
        "tags": ["CRUD Agent Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "sourceSubAgentId",
            "in": "query"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "targetSubAgentId",
            "in": "query"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "externalSubAgentId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of agent relations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "graphId": { "type": "string" },
                          "sourceSubAgentId": { "type": "string" },
                          "targetSubAgentId": {
                            "type": "string",
                            "nullable": true
                          },
                          "externalSubAgentId": {
                            "type": "string",
                            "nullable": true
                          },
                          "relationType": {
                            "type": "string",
                            "nullable": true,
                            "enum": ["transfer", "delegate"]
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "id",
                          "graphId",
                          "sourceSubAgentId",
                          "targetSubAgentId",
                          "externalSubAgentId",
                          "relationType",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Agent Relation",
        "operationId": "create-agent-relation",
        "tags": ["CRUD Agent Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "graphId": { "type": "string" },
                  "sourceSubAgentId": { "type": "string" },
                  "targetSubAgentId": { "type": "string", "nullable": true },
                  "externalSubAgentId": { "type": "string", "nullable": true },
                  "relationType": {
                    "type": "string",
                    "enum": ["transfer", "delegate"]
                  }
                },
                "required": ["graphId", "sourceSubAgentId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agent relation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "graphId": { "type": "string" },
                        "sourceSubAgentId": { "type": "string" },
                        "targetSubAgentId": { "type": "string", "nullable": true },
                        "externalSubAgentId": {
                          "type": "string",
                          "nullable": true
                        },
                        "relationType": {
                          "type": "string",
                          "nullable": true,
                          "enum": ["transfer", "delegate"]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "graphId",
                        "sourceSubAgentId",
                        "targetSubAgentId",
                        "externalSubAgentId",
                        "relationType",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-relations/{id}": {
      "get": {
        "summary": "Get Agent Relation",
        "operationId": "get-agent-relation-by-id",
        "tags": ["CRUD Agent Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Agent relation found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "graphId": { "type": "string" },
                        "sourceSubAgentId": { "type": "string" },
                        "targetSubAgentId": { "type": "string", "nullable": true },
                        "externalSubAgentId": {
                          "type": "string",
                          "nullable": true
                        },
                        "relationType": {
                          "type": "string",
                          "nullable": true,
                          "enum": ["transfer", "delegate"]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "graphId",
                        "sourceSubAgentId",
                        "targetSubAgentId",
                        "externalSubAgentId",
                        "relationType",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Agent Relation",
        "operationId": "update-agent-relation",
        "tags": ["CRUD Agent Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "graphId": { "type": "string" },
                  "sourceSubAgentId": { "type": "string" },
                  "targetSubAgentId": { "type": "string", "nullable": true },
                  "externalSubAgentId": { "type": "string", "nullable": true },
                  "relationType": {
                    "type": "string",
                    "enum": ["transfer", "delegate"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agent relation updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "graphId": { "type": "string" },
                        "sourceSubAgentId": { "type": "string" },
                        "targetSubAgentId": { "type": "string", "nullable": true },
                        "externalSubAgentId": {
                          "type": "string",
                          "nullable": true
                        },
                        "relationType": {
                          "type": "string",
                          "nullable": true,
                          "enum": ["transfer", "delegate"]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "graphId",
                        "sourceSubAgentId",
                        "targetSubAgentId",
                        "externalSubAgentId",
                        "relationType",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Agent Relation",
        "operationId": "delete-agent-relation",
        "tags": ["CRUD Agent Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Agent relation deleted successfully" },
          "404": {
            "description": "Agent relation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-graphs": {
      "get": {
        "summary": "List Agent Graphs",
        "operationId": "list-agent-graphs",
        "tags": ["CRUD Agent Graph"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of agent graphs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string", "nullable": true },
                          "defaultSubAgentId": { "type": "string" },
                          "contextConfigId": {
                            "type": "string",
                            "nullable": true
                          },
                          "modelSettings": {
                            "anyOf": [
                              { "type": "string" },
                              { "type": "number" },
                              { "type": "boolean" },
                              { "nullable": true },
                              {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              {
                                "type": "array",
                                "items": { "nullable": true }
                              },
                              { "nullable": true }
                            ]
                          },
                          "statusUpdates": {
                            "anyOf": [
                              { "type": "string" },
                              { "type": "number" },
                              { "type": "boolean" },
                              { "nullable": true },
                              {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              {
                                "type": "array",
                                "items": { "nullable": true }
                              },
                              { "nullable": true }
                            ]
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "defaultSubAgentId",
                          "contextConfigId",
                          "modelSettings",
                          "statusUpdates",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Agent Graph",
        "operationId": "create-agent-graph",
        "tags": ["CRUD Agent Graph"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string", "nullable": true },
                  "defaultSubAgentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "contextConfigId": { "type": "string", "nullable": true },
                  "modelSettings": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "statusUpdates": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" }
                },
                "required": ["id", "name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agent graph created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "defaultSubAgentId": { "type": "string" },
                        "contextConfigId": {
                          "type": "string",
                          "nullable": true
                        },
                        "modelSettings": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "statusUpdates": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "defaultSubAgentId",
                        "contextConfigId",
                        "modelSettings",
                        "statusUpdates",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-graphs/{id}": {
      "get": {
        "summary": "Get Agent Graph",
        "operationId": "get-agent-graph",
        "tags": ["CRUD Agent Graph"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Agent graph found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "defaultSubAgentId": { "type": "string" },
                        "contextConfigId": {
                          "type": "string",
                          "nullable": true
                        },
                        "modelSettings": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "statusUpdates": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "defaultSubAgentId",
                        "contextConfigId",
                        "modelSettings",
                        "statusUpdates",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Agent Graph",
        "operationId": "update-agent-graph",
        "tags": ["CRUD Agent Graph"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string", "nullable": true },
                  "defaultSubAgentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "contextConfigId": { "type": "string", "nullable": true },
                  "modelSettings": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "statusUpdates": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agent graph updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "defaultSubAgentId": { "type": "string" },
                        "contextConfigId": {
                          "type": "string",
                          "nullable": true
                        },
                        "modelSettings": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "statusUpdates": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "defaultSubAgentId",
                        "contextConfigId",
                        "modelSettings",
                        "statusUpdates",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Agent Graph",
        "operationId": "delete-agent-graph",
        "tags": ["CRUD Agent Graph"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Agent graph deleted successfully" },
          "404": {
            "description": "Agent graph not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-graphs/{graphId}/agents/{agentId}/related": {
      "get": {
        "summary": "Get Related Agent Infos",
        "operationId": "get-related-agent-infos",
        "tags": ["CRUD Agent Graph"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "graphId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Related agent infos retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" }
                        },
                        "required": ["id", "name", "description"]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-graphs/{graphId}/full": {
      "get": {
        "summary": "Get Full Graph Definition",
        "operationId": "get-full-graph-definition",
        "tags": ["CRUD Agent Graph"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "graphId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Full graph definition retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "defaultSubAgentId": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "contextConfigId": {
                          "type": "string",
                          "nullable": true
                        },
                        "modelSettings": {
                          "type": "object",
                          "properties": {
                            "model": { "type": "string" },
                            "structuredOutput": { "type": "string" },
                            "summarizer": { "type": "string" },
                            "providerOptions": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            }
                          }
                        },
                        "statusUpdates": {
                          "type": "object",
                          "properties": {
                            "numEvents": { "type": "number" },
                            "timeInSeconds": { "type": "number" },
                            "model": { "type": "string" },
                            "prompt": { "type": "string", "maxLength": 2000 },
                            "statusComponents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["object"]
                                      },
                                      "properties": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      "required": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      }
                                    },
                                    "required": ["type", "properties"]
                                  }
                                },
                                "required": ["id", "name", "schema"]
                              }
                            }
                          }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "agents": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "instructions": { "type": "string" },
                                  "conversationHistoryConfig": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "modelSettings": {
                                    "type": "object",
                                    "properties": {
                                      "model": { "type": "string" },
                                      "structuredOutput": { "type": "string" },
                                      "summarizer": { "type": "string" },
                                      "providerOptions": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "nullable": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["internal"]
                                  },
                                  "tools": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "dataComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "artifactComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canTransferTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canDelegateTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  }
                                },
                                "required": ["id", "name", "description", "instructions", "tools"],
                                "example": {
                                  "id": "customer-support-agent",
                                  "name": "Customer Support Agent",
                                  "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                                  "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "baseUrl": { "type": "string" },
                                  "credentialReferenceId": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "headers": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["external"]
                                  }
                                },
                                "required": ["id", "name", "description", "baseUrl", "type"],
                                "example": {
                                  "id": "external-customer-agent",
                                  "name": "External Customer Agent",
                                  "description": "An external AI agent for customer support hosted on another service",
                                  "baseUrl": "https://api.example.com/agent"
                                }
                              }
                            ]
                          }
                        },
                        "tools": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "config": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "credentialReferenceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "headers": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "imageUrl": { "type": "string" },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "tools": { "type": "boolean" },
                                  "streaming": { "type": "boolean" }
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": ["healthy", "unhealthy", "unknown"]
                              },
                              "lastHealthCheck": { "type": "string" },
                              "lastError": { "type": "string" },
                              "availableTools": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": { "type": "string" },
                                    "description": { "type": "string" },
                                    "inputSchema": { "nullable": true }
                                  },
                                  "required": ["name"]
                                }
                              },
                              "lastToolsSync": { "type": "string" },
                              "createdAt": { "type": "string" },
                              "updatedAt": { "type": "string" },
                              "activeTools": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["id", "name", "config"]
                          }
                        },
                        "credentialReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "type": { "type": "string" },
                              "credentialStoreId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "retrievalParams": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "type", "credentialStoreId"],
                            "example": {
                              "id": "slack-main-workspace",
                              "type": "nango",
                              "credentialStoreId": "nango-default",
                              "retrievalParams": {
                                "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                                "providerConfigKey": "slack-agent"
                              }
                            }
                          }
                        },
                        "dataComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "props": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "name", "description"],
                            "example": {
                              "id": "orders-list",
                              "name": "OrdersList",
                              "description": "Display a list of user orders with interactive options",
                              "props": {
                                "type": "object",
                                "properties": {
                                  "orders": {
                                    "type": "array",
                                    "items": { "type": "string" },
                                    "description": "Order items to select from"
                                  }
                                },
                                "required": ["orders"]
                              }
                            }
                          }
                        },
                        "artifactComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "summaryProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "fullProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name", "description"],
                            "example": {
                              "id": "user-profile-card",
                              "name": "UserProfileCard",
                              "description": "Display user profile information with interactive elements",
                              "summaryProps": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "User name"
                                  },
                                  "role": {
                                    "type": "string",
                                    "description": "User role"
                                  }
                                },
                                "required": ["name"]
                              },
                              "fullProps": {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "name": { "type": "string" },
                                      "email": { "type": "string" },
                                      "avatar": { "type": "string" },
                                      "role": { "type": "string" },
                                      "bio": { "type": "string" }
                                    },
                                    "description": "Complete user information"
                                  },
                                  "showActions": {
                                    "type": "boolean",
                                    "description": "Whether to show action buttons",
                                    "default": true
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "Additional metadata for the profile"
                                  }
                                },
                                "required": ["user"]
                              }
                            }
                          }
                        },
                        "contextConfig": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "pattern": "^[a-zA-Z0-9_-]+$",
                              "description": "URL-safe resource identifier"
                            },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "requestContextSchema": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            },
                            "contextVariables": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            }
                          },
                          "required": ["id", "name", "description"],
                          "example": {
                            "id": "user-context-config",
                            "name": "User Context Configuration",
                            "description": "Context configuration for user authentication and preferences",
                            "requestContextSchema": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "description": "User identifier"
                                },
                                "sessionToken": {
                                  "type": "string",
                                  "description": "Session token for authentication"
                                }
                              },
                              "required": ["userId"]
                            },
                            "contextVariables": {
                              "userProfile": {
                                "id": "user-profile",
                                "name": "User Profile",
                                "trigger": "initialization",
                                "fetchConfig": {
                                  "url": "https://api.example.com/users/{{requestContext.userId}}",
                                  "method": "GET",
                                  "headers": {
                                    "Authorization": "Bearer {{requestContext.sessionToken}}"
                                  }
                                },
                                "defaultValue": { "name": "Anonymous User" }
                              }
                            }
                          }
                        }
                      },
                      "required": ["id", "name", "agents", "tools"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-tool-relations": {
      "get": {
        "summary": "List Agent Tool Relations",
        "operationId": "list-agent-tool-relations",
        "tags": ["CRUD Agent Tool Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "agentId",
            "in": "query"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "toolId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of agent tool relations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "agentId": { "type": "string" },
                          "toolId": { "type": "string" },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": ["id", "agentId", "toolId", "createdAt", "updatedAt"],
                        "example": {
                          "id": "rel-12345",
                          "agentId": "customer-support-agent",
                          "toolId": "github-mcp-tool",
                          "createdAt": "2024-01-01T00:00:00Z",
                          "updatedAt": "2024-01-01T00:00:00Z"
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Agent Tool Relation",
        "operationId": "create-agent-tool-relation",
        "tags": ["CRUD Agent Tool Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "agentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "toolId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  }
                },
                "required": ["id", "agentId", "toolId"],
                "example": {
                  "agentId": "customer-support-agent",
                  "toolId": "github-mcp-tool"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agent tool relation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "agentId": { "type": "string" },
                        "toolId": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": ["id", "agentId", "toolId", "createdAt", "updatedAt"],
                      "example": {
                        "id": "rel-12345",
                        "agentId": "customer-support-agent",
                        "toolId": "github-mcp-tool",
                        "createdAt": "2024-01-01T00:00:00Z",
                        "updatedAt": "2024-01-01T00:00:00Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-tool-relations/{id}": {
      "get": {
        "summary": "Get Agent Tool Relation",
        "operationId": "get-agent-tool-relation",
        "tags": ["CRUD Agent Tool Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Agent tool relation found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "agentId": { "type": "string" },
                        "toolId": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": ["id", "agentId", "toolId", "createdAt", "updatedAt"],
                      "example": {
                        "id": "rel-12345",
                        "agentId": "customer-support-agent",
                        "toolId": "github-mcp-tool",
                        "createdAt": "2024-01-01T00:00:00Z",
                        "updatedAt": "2024-01-01T00:00:00Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Agent Tool Relation",
        "operationId": "update-agent-tool-relation",
        "tags": ["CRUD Agent Tool Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "agentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "toolId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  }
                },
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agent tool relation updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "agentId": { "type": "string" },
                        "toolId": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": ["id", "agentId", "toolId", "createdAt", "updatedAt"],
                      "example": {
                        "id": "rel-12345",
                        "agentId": "customer-support-agent",
                        "toolId": "github-mcp-tool",
                        "createdAt": "2024-01-01T00:00:00Z",
                        "updatedAt": "2024-01-01T00:00:00Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Agent Tool Relation",
        "operationId": "delete-agent-tool-relation",
        "tags": ["CRUD Agent Tool Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Agent tool relation deleted successfully" },
          "404": {
            "description": "Agent tool relation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-tool-relations/agent/{agentId}/tools": {
      "get": {
        "summary": "Get Tools for Agent",
        "operationId": "get-tools-for-agent",
        "tags": ["CRUD Agent Tool Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "agentId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Tools for agent retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "agentId": { "type": "string" },
                          "toolId": { "type": "string" },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": ["id", "agentId", "toolId", "createdAt", "updatedAt"],
                        "example": {
                          "id": "rel-12345",
                          "agentId": "customer-support-agent",
                          "toolId": "github-mcp-tool",
                          "createdAt": "2024-01-01T00:00:00Z",
                          "updatedAt": "2024-01-01T00:00:00Z"
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-tool-relations/tool/{toolId}/agents": {
      "get": {
        "summary": "Get Agents for Tool",
        "operationId": "get-agents-for-tool",
        "tags": ["CRUD Agent Tool Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "toolId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Agents for tool retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "agentId": { "type": "string" },
                          "toolId": { "type": "string" },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": ["id", "agentId", "toolId", "createdAt", "updatedAt"],
                        "example": {
                          "id": "rel-12345",
                          "agentId": "customer-support-agent",
                          "toolId": "github-mcp-tool",
                          "createdAt": "2024-01-01T00:00:00Z",
                          "updatedAt": "2024-01-01T00:00:00Z"
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-artifact-components/agent/:agentId": {
      "get": {
        "summary": "Get Artifact Components for Agent",
        "operationId": "get-artifact-components-for-agent",
        "tags": ["CRUD Agent Artifact Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Artifact components retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "summaryProps": {
                            "type": "object",
                            "additionalProperties": { "nullable": true }
                          },
                          "fullProps": {
                            "type": "object",
                            "additionalProperties": { "nullable": true }
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "summaryProps",
                          "fullProps",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-artifact-components/component/:artifactComponentId/agents": {
      "get": {
        "summary": "Get Agents Using Artifact Component",
        "operationId": "get-agents-using-artifact-component",
        "tags": ["CRUD Agent Artifact Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "artifactComponentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Agents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agentId": { "type": "string" },
                          "createdAt": { "type": "string" }
                        },
                        "required": ["agentId", "createdAt"]
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-artifact-components": {
      "post": {
        "summary": "Associate Artifact Component with Agent",
        "operationId": "associate-artifact-component-with-agent",
        "tags": ["CRUD Agent Artifact Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "agentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "artifactComponentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  }
                },
                "required": ["agentId", "artifactComponentId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agent artifact component association created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "agentId": { "type": "string" },
                        "artifactComponentId": { "type": "string" },
                        "createdAt": { "type": "string" }
                      },
                      "required": ["id", "agentId", "artifactComponentId", "createdAt"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "409": {
            "description": "Association already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-artifact-components/agent/:agentId/component/:artifactComponentId": {
      "delete": {
        "summary": "Remove Artifact Component from Agent",
        "operationId": "remove-artifact-component-from-agent",
        "tags": ["CRUD Agent Artifact Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "agentId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "artifactComponentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Association removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "removed": { "type": "boolean" }
                  },
                  "required": ["message", "removed"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-artifact-components/agent/:agentId/component/:artifactComponentId/exists": {
      "get": {
        "summary": "Check if Artifact Component is Associated with Agent",
        "operationId": "check-artifact-component-agent-association",
        "tags": ["CRUD Agent Artifact Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "agentId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "artifactComponentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Association status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "exists": { "type": "boolean" } },
                  "required": ["exists"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-data-components/agent/:agentId": {
      "get": {
        "summary": "Get Data Components for Agent",
        "operationId": "get-data-components-for-agent",
        "tags": ["CRUD Agent Data Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "agentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Data components retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "props": {
                            "type": "object",
                            "additionalProperties": { "nullable": true }
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": ["id", "name", "description", "props", "createdAt", "updatedAt"]
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-data-components/component/:dataComponentId/agents": {
      "get": {
        "summary": "Get Agents Using Data Component",
        "operationId": "get-agents-using-data-component",
        "tags": ["CRUD Agent Data Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "dataComponentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Agents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agentId": { "type": "string" },
                          "createdAt": { "type": "string" }
                        },
                        "required": ["agentId", "createdAt"]
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-data-components": {
      "post": {
        "summary": "Associate Data Component with Agent",
        "operationId": "associate-data-component-with-agent",
        "tags": ["CRUD Agent Data Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "agentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "dataComponentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  }
                },
                "required": ["id", "agentId", "dataComponentId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agent data component association created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "agentId": { "type": "string" },
                        "dataComponentId": { "type": "string" },
                        "createdAt": { "type": "string" }
                      },
                      "required": ["id", "agentId", "dataComponentId", "createdAt"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "409": {
            "description": "Association already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-data-components/agent/:agentId/component/:dataComponentId": {
      "delete": {
        "summary": "Remove Data Component from Agent",
        "operationId": "remove-data-component-from-agent",
        "tags": ["CRUD Agent Data Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "agentId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "dataComponentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Association removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "removed": { "type": "boolean" }
                  },
                  "required": ["message", "removed"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/agent-data-components/agent/:agentId/component/:dataComponentId/exists": {
      "get": {
        "summary": "Check if Data Component is Associated with Agent",
        "operationId": "check-data-component-agent-association",
        "tags": ["CRUD Agent Data Component Relations"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "agentId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "dataComponentId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Association status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "exists": { "type": "boolean" } },
                  "required": ["exists"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/artifact-components": {
      "get": {
        "summary": "List Artifact Components",
        "operationId": "list-artifact-components",
        "tags": ["CRUD Artifact Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of artifact components retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "summaryProps": {
                            "type": "object",
                            "nullable": true,
                            "additionalProperties": { "nullable": true }
                          },
                          "fullProps": {
                            "type": "object",
                            "nullable": true,
                            "additionalProperties": { "nullable": true }
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "summaryProps",
                          "fullProps",
                          "createdAt",
                          "updatedAt"
                        ],
                        "example": {
                          "id": "user-profile-card",
                          "name": "UserProfileCard",
                          "description": "Display user profile information with interactive elements",
                          "summaryProps": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "User name"
                              },
                              "role": {
                                "type": "string",
                                "description": "User role"
                              }
                            },
                            "required": ["name"]
                          },
                          "fullProps": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "object",
                                "properties": {
                                  "name": { "type": "string" },
                                  "email": { "type": "string" },
                                  "avatar": { "type": "string" },
                                  "role": { "type": "string" },
                                  "bio": { "type": "string" }
                                },
                                "description": "Complete user information"
                              },
                              "showActions": {
                                "type": "boolean",
                                "description": "Whether to show action buttons",
                                "default": true
                              },
                              "metadata": {
                                "type": "object",
                                "description": "Additional metadata for the profile"
                              }
                            },
                            "required": ["user"]
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Artifact Component",
        "operationId": "create-artifact-component",
        "tags": ["CRUD Artifact Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "summaryProps": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  },
                  "fullProps": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  }
                },
                "required": ["name", "description"],
                "example": {
                  "id": "user-profile-card",
                  "name": "UserProfileCard",
                  "description": "Display user profile information with interactive elements",
                  "summaryProps": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "User name" },
                      "role": { "type": "string", "description": "User role" }
                    },
                    "required": ["name"]
                  },
                  "fullProps": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" },
                          "email": { "type": "string" },
                          "avatar": { "type": "string" },
                          "role": { "type": "string" },
                          "bio": { "type": "string" }
                        },
                        "description": "Complete user information"
                      },
                      "showActions": {
                        "type": "boolean",
                        "description": "Whether to show action buttons",
                        "default": true
                      },
                      "metadata": {
                        "type": "object",
                        "description": "Additional metadata for the profile"
                      }
                    },
                    "required": ["user"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artifact component created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "summaryProps": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "fullProps": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "summaryProps",
                        "fullProps",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "user-profile-card",
                        "name": "UserProfileCard",
                        "description": "Display user profile information with interactive elements",
                        "summaryProps": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "User name"
                            },
                            "role": {
                              "type": "string",
                              "description": "User role"
                            }
                          },
                          "required": ["name"]
                        },
                        "fullProps": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "name": { "type": "string" },
                                "email": { "type": "string" },
                                "avatar": { "type": "string" },
                                "role": { "type": "string" },
                                "bio": { "type": "string" }
                              },
                              "description": "Complete user information"
                            },
                            "showActions": {
                              "type": "boolean",
                              "description": "Whether to show action buttons",
                              "default": true
                            },
                            "metadata": {
                              "type": "object",
                              "description": "Additional metadata for the profile"
                            }
                          },
                          "required": ["user"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/artifact-components/{id}": {
      "get": {
        "summary": "Get Artifact Component",
        "operationId": "get-artifact-component-by-id",
        "tags": ["CRUD Artifact Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Artifact component found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "summaryProps": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "fullProps": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "summaryProps",
                        "fullProps",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "user-profile-card",
                        "name": "UserProfileCard",
                        "description": "Display user profile information with interactive elements",
                        "summaryProps": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "User name"
                            },
                            "role": {
                              "type": "string",
                              "description": "User role"
                            }
                          },
                          "required": ["name"]
                        },
                        "fullProps": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "name": { "type": "string" },
                                "email": { "type": "string" },
                                "avatar": { "type": "string" },
                                "role": { "type": "string" },
                                "bio": { "type": "string" }
                              },
                              "description": "Complete user information"
                            },
                            "showActions": {
                              "type": "boolean",
                              "description": "Whether to show action buttons",
                              "default": true
                            },
                            "metadata": {
                              "type": "object",
                              "description": "Additional metadata for the profile"
                            }
                          },
                          "required": ["user"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Artifact Component",
        "operationId": "update-artifact-component",
        "tags": ["CRUD Artifact Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "summaryProps": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  },
                  "fullProps": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  }
                },
                "example": {
                  "name": "Enhanced UserProfileCard",
                  "description": "Display user profile information with enhanced interactive elements and customization",
                  "summaryProps": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "User name" },
                      "role": { "type": "string", "description": "User role" },
                      "status": {
                        "type": "string",
                        "description": "User status"
                      }
                    },
                    "required": ["name"]
                  },
                  "fullProps": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" },
                          "email": { "type": "string" },
                          "avatar": { "type": "string" },
                          "role": { "type": "string" },
                          "bio": { "type": "string" },
                          "status": { "type": "string" }
                        },
                        "description": "Complete user information"
                      },
                      "showActions": {
                        "type": "boolean",
                        "description": "Whether to show action buttons",
                        "default": true
                      },
                      "theme": {
                        "type": "string",
                        "description": "Theme for the card",
                        "enum": ["light", "dark", "auto"],
                        "default": "auto"
                      },
                      "metadata": {
                        "type": "object",
                        "description": "Additional metadata for the profile"
                      }
                    },
                    "required": ["user"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Artifact component updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "summaryProps": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "fullProps": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "summaryProps",
                        "fullProps",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "user-profile-card",
                        "name": "UserProfileCard",
                        "description": "Display user profile information with interactive elements",
                        "summaryProps": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "User name"
                            },
                            "role": {
                              "type": "string",
                              "description": "User role"
                            }
                          },
                          "required": ["name"]
                        },
                        "fullProps": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "name": { "type": "string" },
                                "email": { "type": "string" },
                                "avatar": { "type": "string" },
                                "role": { "type": "string" },
                                "bio": { "type": "string" }
                              },
                              "description": "Complete user information"
                            },
                            "showActions": {
                              "type": "boolean",
                              "description": "Whether to show action buttons",
                              "default": true
                            },
                            "metadata": {
                              "type": "object",
                              "description": "Additional metadata for the profile"
                            }
                          },
                          "required": ["user"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Artifact Component",
        "operationId": "delete-artifact-component",
        "tags": ["CRUD Artifact Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Artifact component deleted successfully" },
          "404": {
            "description": "Artifact component not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/context-configs": {
      "get": {
        "summary": "List Context Configurations",
        "operationId": "list-context-configs",
        "tags": ["CRUD Context Config"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of context configurations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "requestContextSchema": {
                            "anyOf": [
                              { "type": "string" },
                              { "type": "number" },
                              { "type": "boolean" },
                              { "nullable": true },
                              {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              {
                                "type": "array",
                                "items": { "nullable": true }
                              },
                              { "nullable": true }
                            ]
                          },
                          "contextVariables": {
                            "anyOf": [
                              { "type": "string" },
                              { "type": "number" },
                              { "type": "boolean" },
                              { "nullable": true },
                              {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              {
                                "type": "array",
                                "items": { "nullable": true }
                              },
                              { "nullable": true }
                            ]
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "requestContextSchema",
                          "contextVariables",
                          "createdAt",
                          "updatedAt"
                        ],
                        "example": {
                          "id": "user-context-config",
                          "name": "User Context Configuration",
                          "description": "Context configuration for user authentication and preferences",
                          "requestContextSchema": {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string",
                                "description": "User identifier"
                              },
                              "sessionToken": {
                                "type": "string",
                                "description": "Session token for authentication"
                              }
                            },
                            "required": ["userId"]
                          },
                          "contextVariables": {
                            "userProfile": {
                              "id": "user-profile",
                              "name": "User Profile",
                              "trigger": "initialization",
                              "fetchConfig": {
                                "url": "https://api.example.com/users/{{requestContext.userId}}",
                                "method": "GET",
                                "headers": {
                                  "Authorization": "Bearer {{requestContext.sessionToken}}"
                                }
                              },
                              "defaultValue": { "name": "Anonymous User" }
                            }
                          },
                          "createdAt": "2025-09-03T00:29:03.387Z",
                          "updatedAt": "2025-09-03T00:29:03.387Z"
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Context Configuration",
        "operationId": "create-context-config",
        "tags": ["CRUD Context Config"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "requestContextSchema": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "contextVariables": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  }
                },
                "required": ["id", "name", "description"],
                "example": {
                  "id": "user-context-config",
                  "name": "User Context Configuration",
                  "description": "Context configuration for user authentication and preferences",
                  "requestContextSchema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "User identifier"
                      },
                      "sessionToken": {
                        "type": "string",
                        "description": "Session token for authentication"
                      }
                    },
                    "required": ["userId"]
                  },
                  "contextVariables": {
                    "userProfile": {
                      "id": "user-profile",
                      "name": "User Profile",
                      "trigger": "initialization",
                      "fetchConfig": {
                        "url": "https://api.example.com/users/{{requestContext.userId}}",
                        "method": "GET",
                        "headers": {
                          "Authorization": "Bearer {{requestContext.sessionToken}}"
                        }
                      },
                      "defaultValue": { "name": "Anonymous User" }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Context configuration created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "requestContextSchema": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "contextVariables": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "requestContextSchema",
                        "contextVariables",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "user-context-config",
                        "name": "User Context Configuration",
                        "description": "Context configuration for user authentication and preferences",
                        "requestContextSchema": {
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": "string",
                              "description": "User identifier"
                            },
                            "sessionToken": {
                              "type": "string",
                              "description": "Session token for authentication"
                            }
                          },
                          "required": ["userId"]
                        },
                        "contextVariables": {
                          "userProfile": {
                            "id": "user-profile",
                            "name": "User Profile",
                            "trigger": "initialization",
                            "fetchConfig": {
                              "url": "https://api.example.com/users/{{requestContext.userId}}",
                              "method": "GET",
                              "headers": {
                                "Authorization": "Bearer {{requestContext.sessionToken}}"
                              }
                            },
                            "defaultValue": { "name": "Anonymous User" }
                          }
                        },
                        "createdAt": "2025-09-03T00:29:03.387Z",
                        "updatedAt": "2025-09-03T00:29:03.387Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/context-configs/{id}": {
      "get": {
        "summary": "Get Context Configuration",
        "operationId": "get-context-config-by-id",
        "tags": ["CRUD Context Config"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Context configuration found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "requestContextSchema": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "contextVariables": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "requestContextSchema",
                        "contextVariables",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "user-context-config",
                        "name": "User Context Configuration",
                        "description": "Context configuration for user authentication and preferences",
                        "requestContextSchema": {
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": "string",
                              "description": "User identifier"
                            },
                            "sessionToken": {
                              "type": "string",
                              "description": "Session token for authentication"
                            }
                          },
                          "required": ["userId"]
                        },
                        "contextVariables": {
                          "userProfile": {
                            "id": "user-profile",
                            "name": "User Profile",
                            "trigger": "initialization",
                            "fetchConfig": {
                              "url": "https://api.example.com/users/{{requestContext.userId}}",
                              "method": "GET",
                              "headers": {
                                "Authorization": "Bearer {{requestContext.sessionToken}}"
                              }
                            },
                            "defaultValue": { "name": "Anonymous User" }
                          }
                        },
                        "createdAt": "2025-09-03T00:29:03.387Z",
                        "updatedAt": "2025-09-03T00:29:03.387Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Context Configuration",
        "operationId": "update-context-config",
        "tags": ["CRUD Context Config"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "requestContextSchema": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "contextVariables": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  }
                },
                "example": {
                  "name": "Enhanced User Context Configuration",
                  "description": "Enhanced context configuration with additional user data fetching",
                  "contextVariables": {
                    "userProfile": {
                      "id": "user-profile",
                      "name": "Enhanced User Profile",
                      "trigger": "initialization",
                      "fetchConfig": {
                        "url": "https://api.example.com/users/{{requestContext.userId}}/full",
                        "method": "GET",
                        "headers": {
                          "Authorization": "Bearer {{requestContext.sessionToken}}"
                        }
                      },
                      "defaultValue": {
                        "name": "Anonymous User",
                        "preferences": {}
                      }
                    },
                    "userPermissions": {
                      "id": "user-permissions",
                      "name": "User Permissions",
                      "trigger": "invocation",
                      "fetchConfig": {
                        "url": "https://api.example.com/users/{{requestContext.userId}}/permissions",
                        "method": "GET"
                      },
                      "defaultValue": { "permissions": [] }
                    }
                  }
                },
                "examples": [
                  {
                    "name": "Clear context variables",
                    "value": { "contextVariables": null }
                  },
                  {
                    "name": "Clear request schema",
                    "value": { "requestContextSchema": null }
                  },
                  {
                    "name": "Clear both fields",
                    "value": {
                      "contextVariables": null,
                      "requestContextSchema": null
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Context configuration updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "requestContextSchema": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "contextVariables": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "requestContextSchema",
                        "contextVariables",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "user-context-config",
                        "name": "User Context Configuration",
                        "description": "Context configuration for user authentication and preferences",
                        "requestContextSchema": {
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": "string",
                              "description": "User identifier"
                            },
                            "sessionToken": {
                              "type": "string",
                              "description": "Session token for authentication"
                            }
                          },
                          "required": ["userId"]
                        },
                        "contextVariables": {
                          "userProfile": {
                            "id": "user-profile",
                            "name": "User Profile",
                            "trigger": "initialization",
                            "fetchConfig": {
                              "url": "https://api.example.com/users/{{requestContext.userId}}",
                              "method": "GET",
                              "headers": {
                                "Authorization": "Bearer {{requestContext.sessionToken}}"
                              }
                            },
                            "defaultValue": { "name": "Anonymous User" }
                          }
                        },
                        "createdAt": "2025-09-03T00:29:03.387Z",
                        "updatedAt": "2025-09-03T00:29:03.387Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Context Configuration",
        "operationId": "delete-context-config",
        "tags": ["CRUD Context Config"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Context configuration deleted successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/credentials": {
      "get": {
        "summary": "List Credentials",
        "operationId": "list-credentials",
        "tags": ["CRUD Credential"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of credentials retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "type": { "type": "string" },
                          "credentialStoreId": { "type": "string" },
                          "retrievalParams": {
                            "type": "object",
                            "nullable": true,
                            "additionalProperties": { "nullable": true }
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" },
                          "tools": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tenantId": { "type": "string" },
                                "projectId": { "type": "string" },
                                "id": { "type": "string" },
                                "name": { "type": "string" },
                                "config": {
                                  "anyOf": [
                                    { "type": "string" },
                                    { "type": "number" },
                                    { "type": "boolean" },
                                    { "nullable": true },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    {
                                      "type": "array",
                                      "items": { "nullable": true }
                                    },
                                    { "nullable": true }
                                  ]
                                },
                                "credentialReferenceId": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "headers": {
                                  "anyOf": [
                                    { "type": "string" },
                                    { "type": "number" },
                                    { "type": "boolean" },
                                    { "nullable": true },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    {
                                      "type": "array",
                                      "items": { "nullable": true }
                                    },
                                    { "nullable": true }
                                  ]
                                },
                                "imageUrl": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "capabilities": {
                                  "anyOf": [
                                    { "type": "string" },
                                    { "type": "number" },
                                    { "type": "boolean" },
                                    { "nullable": true },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    {
                                      "type": "array",
                                      "items": { "nullable": true }
                                    },
                                    { "nullable": true }
                                  ]
                                },
                                "status": { "type": "string" },
                                "lastHealthCheck": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "lastError": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "availableTools": {
                                  "anyOf": [
                                    { "type": "string" },
                                    { "type": "number" },
                                    { "type": "boolean" },
                                    { "nullable": true },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    {
                                      "type": "array",
                                      "items": { "nullable": true }
                                    },
                                    { "nullable": true }
                                  ]
                                },
                                "lastToolsSync": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "createdAt": { "type": "string" },
                                "updatedAt": { "type": "string" }
                              },
                              "required": [
                                "tenantId",
                                "projectId",
                                "id",
                                "name",
                                "config",
                                "credentialReferenceId",
                                "headers",
                                "imageUrl",
                                "capabilities",
                                "status",
                                "lastHealthCheck",
                                "lastError",
                                "availableTools",
                                "lastToolsSync",
                                "createdAt",
                                "updatedAt"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "credentialStoreId",
                          "retrievalParams",
                          "createdAt",
                          "updatedAt"
                        ],
                        "example": {
                          "id": "slack-main-workspace",
                          "type": "nango",
                          "credentialStoreId": "nango-default",
                          "retrievalParams": {
                            "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                            "providerConfigKey": "slack-agent"
                          },
                          "createdAt": "2024-01-01T00:00:00.000Z",
                          "updatedAt": "2024-01-01T00:00:00.000Z"
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Credential",
        "operationId": "create-credential",
        "tags": ["CRUD Credential"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "type": { "type": "string" },
                  "credentialStoreId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "retrievalParams": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  }
                },
                "required": ["id", "type", "credentialStoreId"],
                "example": {
                  "id": "slack-main-workspace",
                  "type": "nango",
                  "credentialStoreId": "nango-default",
                  "retrievalParams": {
                    "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                    "providerConfigKey": "slack-agent"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Credential created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "type": { "type": "string" },
                        "credentialStoreId": { "type": "string" },
                        "retrievalParams": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "tools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tenantId": { "type": "string" },
                              "projectId": { "type": "string" },
                              "id": { "type": "string" },
                              "name": { "type": "string" },
                              "config": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "credentialReferenceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "headers": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "imageUrl": {
                                "type": "string",
                                "nullable": true
                              },
                              "capabilities": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "status": { "type": "string" },
                              "lastHealthCheck": {
                                "type": "string",
                                "nullable": true
                              },
                              "lastError": {
                                "type": "string",
                                "nullable": true
                              },
                              "availableTools": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "lastToolsSync": {
                                "type": "string",
                                "nullable": true
                              },
                              "createdAt": { "type": "string" },
                              "updatedAt": { "type": "string" }
                            },
                            "required": [
                              "tenantId",
                              "projectId",
                              "id",
                              "name",
                              "config",
                              "credentialReferenceId",
                              "headers",
                              "imageUrl",
                              "capabilities",
                              "status",
                              "lastHealthCheck",
                              "lastError",
                              "availableTools",
                              "lastToolsSync",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "credentialStoreId",
                        "retrievalParams",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "slack-main-workspace",
                        "type": "nango",
                        "credentialStoreId": "nango-default",
                        "retrievalParams": {
                          "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                          "providerConfigKey": "slack-agent"
                        },
                        "createdAt": "2024-01-01T00:00:00.000Z",
                        "updatedAt": "2024-01-01T00:00:00.000Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/credentials/{id}": {
      "get": {
        "summary": "Get Credential",
        "operationId": "get-credential-by-id",
        "tags": ["CRUD Credential"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Credential found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "type": { "type": "string" },
                        "credentialStoreId": { "type": "string" },
                        "retrievalParams": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "tools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tenantId": { "type": "string" },
                              "projectId": { "type": "string" },
                              "id": { "type": "string" },
                              "name": { "type": "string" },
                              "config": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "credentialReferenceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "headers": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "imageUrl": {
                                "type": "string",
                                "nullable": true
                              },
                              "capabilities": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "status": { "type": "string" },
                              "lastHealthCheck": {
                                "type": "string",
                                "nullable": true
                              },
                              "lastError": {
                                "type": "string",
                                "nullable": true
                              },
                              "availableTools": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "lastToolsSync": {
                                "type": "string",
                                "nullable": true
                              },
                              "createdAt": { "type": "string" },
                              "updatedAt": { "type": "string" }
                            },
                            "required": [
                              "tenantId",
                              "projectId",
                              "id",
                              "name",
                              "config",
                              "credentialReferenceId",
                              "headers",
                              "imageUrl",
                              "capabilities",
                              "status",
                              "lastHealthCheck",
                              "lastError",
                              "availableTools",
                              "lastToolsSync",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "credentialStoreId",
                        "retrievalParams",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "slack-main-workspace",
                        "type": "nango",
                        "credentialStoreId": "nango-default",
                        "retrievalParams": {
                          "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                          "providerConfigKey": "slack-agent"
                        },
                        "createdAt": "2024-01-01T00:00:00.000Z",
                        "updatedAt": "2024-01-01T00:00:00.000Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Credential",
        "operationId": "update-credential",
        "tags": ["CRUD Credential"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "type": { "type": "string" },
                  "credentialStoreId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "retrievalParams": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  }
                },
                "example": {
                  "retrievalParams": {
                    "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                    "providerConfigKey": "slack-agent",
                    "updatedConfig": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credential updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "type": { "type": "string" },
                        "credentialStoreId": { "type": "string" },
                        "retrievalParams": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "tools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tenantId": { "type": "string" },
                              "projectId": { "type": "string" },
                              "id": { "type": "string" },
                              "name": { "type": "string" },
                              "config": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "credentialReferenceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "headers": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "imageUrl": {
                                "type": "string",
                                "nullable": true
                              },
                              "capabilities": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "status": { "type": "string" },
                              "lastHealthCheck": {
                                "type": "string",
                                "nullable": true
                              },
                              "lastError": {
                                "type": "string",
                                "nullable": true
                              },
                              "availableTools": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "lastToolsSync": {
                                "type": "string",
                                "nullable": true
                              },
                              "createdAt": { "type": "string" },
                              "updatedAt": { "type": "string" }
                            },
                            "required": [
                              "tenantId",
                              "projectId",
                              "id",
                              "name",
                              "config",
                              "credentialReferenceId",
                              "headers",
                              "imageUrl",
                              "capabilities",
                              "status",
                              "lastHealthCheck",
                              "lastError",
                              "availableTools",
                              "lastToolsSync",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "credentialStoreId",
                        "retrievalParams",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "slack-main-workspace",
                        "type": "nango",
                        "credentialStoreId": "nango-default",
                        "retrievalParams": {
                          "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                          "providerConfigKey": "slack-agent"
                        },
                        "createdAt": "2024-01-01T00:00:00.000Z",
                        "updatedAt": "2024-01-01T00:00:00.000Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Credential",
        "operationId": "delete-credential",
        "tags": ["CRUD Credential"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Credential deleted successfully" },
          "404": {
            "description": "Credential not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/data-components": {
      "get": {
        "summary": "List Data Components",
        "operationId": "list-data-components",
        "tags": ["CRUD Data Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of data components retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "props": {
                            "type": "object",
                            "nullable": true,
                            "additionalProperties": { "nullable": true }
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "props",
                          "createdAt",
                          "updatedAt"
                        ],
                        "example": {
                          "id": "orders-list",
                          "name": "OrdersList",
                          "description": "Display a list of user orders with interactive options",
                          "props": {
                            "type": "object",
                            "properties": {
                              "orders": {
                                "type": "array",
                                "items": { "type": "string" },
                                "description": "Order items to select from"
                              }
                            },
                            "required": ["orders"]
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Data Component",
        "operationId": "create-data-component",
        "tags": ["CRUD Data Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "props": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  }
                },
                "required": ["id", "name", "description"],
                "example": {
                  "id": "orders-list",
                  "name": "OrdersList",
                  "description": "Display a list of user orders with interactive options",
                  "props": {
                    "type": "object",
                    "properties": {
                      "orders": {
                        "type": "array",
                        "items": { "type": "string" },
                        "description": "Order items to select from"
                      }
                    },
                    "required": ["orders"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data component created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "props": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": ["id", "name", "description", "props", "createdAt", "updatedAt"],
                      "example": {
                        "id": "orders-list",
                        "name": "OrdersList",
                        "description": "Display a list of user orders with interactive options",
                        "props": {
                          "type": "object",
                          "properties": {
                            "orders": {
                              "type": "array",
                              "items": { "type": "string" },
                              "description": "Order items to select from"
                            }
                          },
                          "required": ["orders"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/data-components/{id}": {
      "get": {
        "summary": "Get Data Component",
        "operationId": "get-data-component-by-id",
        "tags": ["CRUD Data Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Data component found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "props": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": ["id", "name", "description", "props", "createdAt", "updatedAt"],
                      "example": {
                        "id": "orders-list",
                        "name": "OrdersList",
                        "description": "Display a list of user orders with interactive options",
                        "props": {
                          "type": "object",
                          "properties": {
                            "orders": {
                              "type": "array",
                              "items": { "type": "string" },
                              "description": "Order items to select from"
                            }
                          },
                          "required": ["orders"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Data Component",
        "operationId": "update-data-component",
        "tags": ["CRUD Data Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "props": {
                    "type": "object",
                    "additionalProperties": { "nullable": true }
                  }
                },
                "example": {
                  "name": "Enhanced OrdersList",
                  "description": "Display a list of user orders with enhanced filtering and sorting options",
                  "props": {
                    "type": "object",
                    "properties": {
                      "orders": {
                        "type": "array",
                        "items": { "type": "string" },
                        "description": "Order items to select from"
                      },
                      "sortBy": {
                        "type": "string",
                        "description": "Sort orders by field",
                        "enum": ["date", "amount", "status"]
                      }
                    },
                    "required": ["orders"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data component updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "props": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "nullable": true }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": ["id", "name", "description", "props", "createdAt", "updatedAt"],
                      "example": {
                        "id": "orders-list",
                        "name": "OrdersList",
                        "description": "Display a list of user orders with interactive options",
                        "props": {
                          "type": "object",
                          "properties": {
                            "orders": {
                              "type": "array",
                              "items": { "type": "string" },
                              "description": "Order items to select from"
                            }
                          },
                          "required": ["orders"]
                        }
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Data Component",
        "operationId": "delete-data-component",
        "tags": ["CRUD Data Component"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Data component deleted successfully" },
          "404": {
            "description": "Data component not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/external-agents": {
      "get": {
        "summary": "List External Agents",
        "operationId": "list-external-agents",
        "tags": ["CRUD External Agents"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of external agents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "baseUrl": { "type": "string" },
                          "credentialReferenceId": {
                            "type": "string",
                            "nullable": true
                          },
                          "headers": {
                            "type": "object",
                            "nullable": true,
                            "additionalProperties": { "type": "string" }
                          },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "baseUrl",
                          "createdAt",
                          "updatedAt"
                        ],
                        "example": {
                          "id": "external-customer-agent",
                          "name": "External Customer Agent",
                          "description": "An external AI agent for customer support hosted on another service",
                          "baseUrl": "https://api.example.com/agent",
                          "createdAt": "2025-09-03T00:29:03.388Z",
                          "updatedAt": "2025-09-03T00:29:03.388Z"
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create External Agent",
        "operationId": "create-external-agent",
        "tags": ["CRUD External Agents"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "baseUrl": { "type": "string" },
                  "credentialReferenceId": {
                    "type": "string",
                    "nullable": true
                  },
                  "headers": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" },
                  "type": { "type": "string", "enum": ["external"] }
                },
                "required": ["id", "name", "description", "baseUrl"],
                "example": {
                  "id": "external-customer-agent",
                  "name": "External Customer Agent",
                  "description": "An external AI agent for customer support hosted on another service",
                  "baseUrl": "https://api.example.com/agent"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "External agent created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "baseUrl": { "type": "string" },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "headers": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "type": "string" }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "baseUrl",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "external-customer-agent",
                        "name": "External Customer Agent",
                        "description": "An external AI agent for customer support hosted on another service",
                        "baseUrl": "https://api.example.com/agent",
                        "createdAt": "2025-09-03T00:29:03.388Z",
                        "updatedAt": "2025-09-03T00:29:03.388Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/external-agents/{id}": {
      "get": {
        "summary": "Get External Agent",
        "operationId": "get-external-agent-by-id",
        "tags": ["CRUD External Agents"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "External agent found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "baseUrl": { "type": "string" },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "headers": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "type": "string" }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "baseUrl",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "external-customer-agent",
                        "name": "External Customer Agent",
                        "description": "An external AI agent for customer support hosted on another service",
                        "baseUrl": "https://api.example.com/agent",
                        "createdAt": "2025-09-03T00:29:03.388Z",
                        "updatedAt": "2025-09-03T00:29:03.388Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update External Agent",
        "operationId": "update-external-agent",
        "tags": ["CRUD External Agents"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "baseUrl": { "type": "string" },
                  "credentialReferenceId": {
                    "type": "string",
                    "nullable": true
                  },
                  "headers": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "number" },
                      { "type": "boolean" },
                      { "nullable": true },
                      {
                        "type": "object",
                        "additionalProperties": { "nullable": true }
                      },
                      { "type": "array", "items": { "nullable": true } },
                      { "nullable": true }
                    ]
                  },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" },
                  "type": { "type": "string", "enum": ["external"] }
                },
                "example": {
                  "name": "Enhanced External Customer Agent",
                  "description": "An enhanced external AI agent for customer support with improved capabilities",
                  "baseUrl": "https://api.example.com/v2/agent"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "External agent updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "baseUrl": { "type": "string" },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "headers": {
                          "type": "object",
                          "nullable": true,
                          "additionalProperties": { "type": "string" }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "baseUrl",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "external-customer-agent",
                        "name": "External Customer Agent",
                        "description": "An external AI agent for customer support hosted on another service",
                        "baseUrl": "https://api.example.com/agent",
                        "createdAt": "2025-09-03T00:29:03.388Z",
                        "updatedAt": "2025-09-03T00:29:03.388Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete External Agent",
        "operationId": "delete-external-agent",
        "tags": ["CRUD External Agents"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "External agent deleted successfully" },
          "404": {
            "description": "External agent not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/tools": {
      "get": {
        "summary": "List Tools",
        "operationId": "list-tools",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
            },
            "required": false,
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tools retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "tenantId": { "type": "string" },
                          "name": { "type": "string" },
                          "config": {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "enum": ["mcp"] },
                              "mcp": {
                                "type": "object",
                                "properties": {
                                  "server": {
                                    "type": "object",
                                    "properties": {
                                      "url": { "type": "string" },
                                      "timeout": { "type": "number" },
                                      "headers": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": ["url"]
                                  },
                                  "transport": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["streamable_http", "sse"]
                                      },
                                      "requestInit": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      "eventSourceInit": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      "reconnectionOptions": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      "sessionId": { "type": "string" }
                                    },
                                    "required": ["type"]
                                  },
                                  "activeTools": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  }
                                },
                                "required": ["server"]
                              }
                            },
                            "required": ["type", "mcp"]
                          },
                          "credentialReferenceId": {
                            "type": "string",
                            "nullable": true
                          },
                          "imageUrl": { "type": "string", "nullable": true },
                          "headers": {
                            "type": "object",
                            "additionalProperties": { "type": "string" }
                          },
                          "status": {
                            "type": "string",
                            "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                          },
                          "lastHealthCheck": {
                            "type": "string",
                            "format": "date"
                          },
                          "lastError": { "type": "string" },
                          "availableTools": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": { "type": "string" },
                                "description": { "type": "string" },
                                "inputSchema": {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                }
                              },
                              "required": ["name"]
                            }
                          },
                          "lastToolsSync": {
                            "type": "string",
                            "format": "date"
                          },
                          "version": { "type": "string" },
                          "createdAt": { "type": "string", "format": "date" },
                          "updatedAt": { "type": "string", "format": "date" }
                        },
                        "required": [
                          "id",
                          "tenantId",
                          "name",
                          "config",
                          "status",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Tool",
        "operationId": "create-tool",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string" },
                  "name": { "type": "string", "minLength": 1 },
                  "config": {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["mcp"] },
                      "mcp": {
                        "type": "object",
                        "properties": {
                          "server": {
                            "type": "object",
                            "properties": {
                              "url": { "type": "string", "format": "uri" },
                              "timeout": {
                                "type": "number",
                                "minimum": 0,
                                "exclusiveMinimum": true
                              },
                              "headers": {
                                "type": "object",
                                "additionalProperties": { "type": "string" }
                              }
                            },
                            "required": ["url"]
                          },
                          "transport": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["streamable_http", "sse"]
                              },
                              "requestInit": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "eventSourceInit": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "reconnectionOptions": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "sessionId": { "type": "string" }
                            },
                            "required": ["type"]
                          },
                          "activeTools": {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        },
                        "required": ["server"]
                      }
                    },
                    "required": ["type", "mcp"]
                  },
                  "credentialReferenceId": {
                    "type": "string",
                    "nullable": true
                  },
                  "imageUrl": { "type": "string" },
                  "headers": {
                    "type": "object",
                    "additionalProperties": { "type": "string" }
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "category": { "type": "string" },
                      "vendor": { "type": "string" },
                      "documentation_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "support_contact": { "type": "string" }
                    }
                  }
                },
                "required": ["name", "config"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tool created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "tenantId": { "type": "string" },
                        "name": { "type": "string" },
                        "config": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "enum": ["mcp"] },
                            "mcp": {
                              "type": "object",
                              "properties": {
                                "server": {
                                  "type": "object",
                                  "properties": {
                                    "url": { "type": "string" },
                                    "timeout": { "type": "number" },
                                    "headers": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": ["url"]
                                },
                                "transport": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": ["streamable_http", "sse"]
                                    },
                                    "requestInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "eventSourceInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "reconnectionOptions": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "sessionId": { "type": "string" }
                                  },
                                  "required": ["type"]
                                },
                                "activeTools": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                }
                              },
                              "required": ["server"]
                            }
                          },
                          "required": ["type", "mcp"]
                        },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": { "type": "string", "nullable": true },
                        "headers": {
                          "type": "object",
                          "additionalProperties": { "type": "string" }
                        },
                        "status": {
                          "type": "string",
                          "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                        },
                        "lastHealthCheck": {
                          "type": "string",
                          "format": "date"
                        },
                        "lastError": { "type": "string" },
                        "availableTools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "inputSchema": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name"]
                          }
                        },
                        "lastToolsSync": { "type": "string", "format": "date" },
                        "version": { "type": "string" },
                        "createdAt": { "type": "string", "format": "date" },
                        "updatedAt": { "type": "string", "format": "date" }
                      },
                      "required": [
                        "id",
                        "tenantId",
                        "name",
                        "config",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/tools/{id}": {
      "get": {
        "summary": "Get Tool",
        "operationId": "get-tool",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Tool found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "tenantId": { "type": "string" },
                        "name": { "type": "string" },
                        "config": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "enum": ["mcp"] },
                            "mcp": {
                              "type": "object",
                              "properties": {
                                "server": {
                                  "type": "object",
                                  "properties": {
                                    "url": { "type": "string" },
                                    "timeout": { "type": "number" },
                                    "headers": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": ["url"]
                                },
                                "transport": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": ["streamable_http", "sse"]
                                    },
                                    "requestInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "eventSourceInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "reconnectionOptions": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "sessionId": { "type": "string" }
                                  },
                                  "required": ["type"]
                                },
                                "activeTools": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                }
                              },
                              "required": ["server"]
                            }
                          },
                          "required": ["type", "mcp"]
                        },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": { "type": "string", "nullable": true },
                        "headers": {
                          "type": "object",
                          "additionalProperties": { "type": "string" }
                        },
                        "status": {
                          "type": "string",
                          "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                        },
                        "lastHealthCheck": {
                          "type": "string",
                          "format": "date"
                        },
                        "lastError": { "type": "string" },
                        "availableTools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "inputSchema": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name"]
                          }
                        },
                        "lastToolsSync": { "type": "string", "format": "date" },
                        "version": { "type": "string" },
                        "createdAt": { "type": "string", "format": "date" },
                        "updatedAt": { "type": "string", "format": "date" }
                      },
                      "required": [
                        "id",
                        "tenantId",
                        "name",
                        "config",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Tool",
        "operationId": "update-tool",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string" },
                  "name": { "type": "string", "minLength": 1 },
                  "config": {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["mcp"] },
                      "mcp": {
                        "type": "object",
                        "properties": {
                          "server": {
                            "type": "object",
                            "properties": {
                              "url": { "type": "string", "format": "uri" },
                              "timeout": {
                                "type": "number",
                                "minimum": 0,
                                "exclusiveMinimum": true
                              },
                              "headers": {
                                "type": "object",
                                "additionalProperties": { "type": "string" }
                              }
                            },
                            "required": ["url"]
                          },
                          "transport": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["streamable_http", "sse"]
                              },
                              "requestInit": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "eventSourceInit": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "reconnectionOptions": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "sessionId": { "type": "string" }
                            },
                            "required": ["type"]
                          },
                          "activeTools": {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        },
                        "required": ["server"]
                      }
                    },
                    "required": ["type", "mcp"]
                  },
                  "credentialReferenceId": {
                    "type": "string",
                    "nullable": true
                  },
                  "imageUrl": { "type": "string" },
                  "headers": {
                    "type": "object",
                    "additionalProperties": { "type": "string" }
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "category": { "type": "string" },
                      "vendor": { "type": "string" },
                      "documentation_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "support_contact": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tool updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "tenantId": { "type": "string" },
                        "name": { "type": "string" },
                        "config": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "enum": ["mcp"] },
                            "mcp": {
                              "type": "object",
                              "properties": {
                                "server": {
                                  "type": "object",
                                  "properties": {
                                    "url": { "type": "string" },
                                    "timeout": { "type": "number" },
                                    "headers": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": ["url"]
                                },
                                "transport": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": ["streamable_http", "sse"]
                                    },
                                    "requestInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "eventSourceInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "reconnectionOptions": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "sessionId": { "type": "string" }
                                  },
                                  "required": ["type"]
                                },
                                "activeTools": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                }
                              },
                              "required": ["server"]
                            }
                          },
                          "required": ["type", "mcp"]
                        },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": { "type": "string", "nullable": true },
                        "headers": {
                          "type": "object",
                          "additionalProperties": { "type": "string" }
                        },
                        "status": {
                          "type": "string",
                          "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                        },
                        "lastHealthCheck": {
                          "type": "string",
                          "format": "date"
                        },
                        "lastError": { "type": "string" },
                        "availableTools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "inputSchema": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name"]
                          }
                        },
                        "lastToolsSync": { "type": "string", "format": "date" },
                        "version": { "type": "string" },
                        "createdAt": { "type": "string", "format": "date" },
                        "updatedAt": { "type": "string", "format": "date" }
                      },
                      "required": [
                        "id",
                        "tenantId",
                        "name",
                        "config",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Tool",
        "operationId": "delete-tool",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Tool deleted successfully" },
          "404": {
            "description": "Tool not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/tools/{id}/health-check": {
      "post": {
        "summary": "Check Tool Health",
        "operationId": "check-tool-health",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Tool health check completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "tool": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "tenantId": { "type": "string" },
                            "name": { "type": "string" },
                            "config": {
                              "type": "object",
                              "properties": {
                                "type": { "type": "string", "enum": ["mcp"] },
                                "mcp": {
                                  "type": "object",
                                  "properties": {
                                    "server": {
                                      "type": "object",
                                      "properties": {
                                        "url": { "type": "string" },
                                        "timeout": { "type": "number" },
                                        "headers": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": ["url"]
                                    },
                                    "transport": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": ["streamable_http", "sse"]
                                        },
                                        "requestInit": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "nullable": true
                                          }
                                        },
                                        "eventSourceInit": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "nullable": true
                                          }
                                        },
                                        "reconnectionOptions": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "nullable": true
                                          }
                                        },
                                        "sessionId": { "type": "string" }
                                      },
                                      "required": ["type"]
                                    },
                                    "activeTools": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  },
                                  "required": ["server"]
                                }
                              },
                              "required": ["type", "mcp"]
                            },
                            "credentialReferenceId": {
                              "type": "string",
                              "nullable": true
                            },
                            "imageUrl": { "type": "string", "nullable": true },
                            "headers": {
                              "type": "object",
                              "additionalProperties": { "type": "string" }
                            },
                            "status": {
                              "type": "string",
                              "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                            },
                            "lastHealthCheck": {
                              "type": "string",
                              "format": "date"
                            },
                            "lastError": { "type": "string" },
                            "availableTools": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "inputSchema": {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  }
                                },
                                "required": ["name"]
                              }
                            },
                            "lastToolsSync": {
                              "type": "string",
                              "format": "date"
                            },
                            "version": { "type": "string" },
                            "createdAt": { "type": "string", "format": "date" },
                            "updatedAt": { "type": "string", "format": "date" }
                          },
                          "required": [
                            "id",
                            "tenantId",
                            "name",
                            "config",
                            "status",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "healthCheck": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                            },
                            "error": { "type": "string" }
                          },
                          "required": ["status"]
                        }
                      },
                      "required": ["tool", "healthCheck"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/tools/health-check-all": {
      "post": {
        "summary": "Check All Tools Health",
        "operationId": "check-all-tools-health",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "All tools health check completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "total": { "type": "number" },
                        "successful": { "type": "number" },
                        "failed": { "type": "number" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "index": { "type": "number" },
                              "status": {
                                "type": "string",
                                "enum": ["fulfilled", "rejected"]
                              },
                              "data": { "type": "string" },
                              "error": { "type": "string" }
                            },
                            "required": ["index", "status"]
                          }
                        }
                      },
                      "required": ["total", "successful", "failed", "results"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/tools/{id}/sync": {
      "post": {
        "summary": "Sync Tool Definitions",
        "operationId": "sync-tool-definitions",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Tool definitions synchronized successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "tenantId": { "type": "string" },
                        "name": { "type": "string" },
                        "config": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "enum": ["mcp"] },
                            "mcp": {
                              "type": "object",
                              "properties": {
                                "server": {
                                  "type": "object",
                                  "properties": {
                                    "url": { "type": "string" },
                                    "timeout": { "type": "number" },
                                    "headers": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": ["url"]
                                },
                                "transport": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": ["streamable_http", "sse"]
                                    },
                                    "requestInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "eventSourceInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "reconnectionOptions": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "sessionId": { "type": "string" }
                                  },
                                  "required": ["type"]
                                },
                                "activeTools": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                }
                              },
                              "required": ["server"]
                            }
                          },
                          "required": ["type", "mcp"]
                        },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": { "type": "string", "nullable": true },
                        "headers": {
                          "type": "object",
                          "additionalProperties": { "type": "string" }
                        },
                        "status": {
                          "type": "string",
                          "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                        },
                        "lastHealthCheck": {
                          "type": "string",
                          "format": "date"
                        },
                        "lastError": { "type": "string" },
                        "availableTools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "inputSchema": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name"]
                          }
                        },
                        "lastToolsSync": { "type": "string", "format": "date" },
                        "version": { "type": "string" },
                        "createdAt": { "type": "string", "format": "date" },
                        "updatedAt": { "type": "string", "format": "date" }
                      },
                      "required": [
                        "id",
                        "tenantId",
                        "name",
                        "config",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/tools/{id}/available-tools": {
      "get": {
        "summary": "Get Available Tools",
        "operationId": "get-available-tools",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Available tools retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "availableTools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "inputSchema": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name"]
                          }
                        },
                        "lastSync": { "type": "string" },
                        "status": {
                          "type": "string",
                          "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                        }
                      },
                      "required": ["availableTools", "status"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/tools/{id}/status": {
      "patch": {
        "summary": "Update Tool Status",
        "operationId": "update-tool-status",
        "tags": ["CRUD Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tool status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "tenantId": { "type": "string" },
                        "name": { "type": "string" },
                        "config": {
                          "type": "object",
                          "properties": {
                            "type": { "type": "string", "enum": ["mcp"] },
                            "mcp": {
                              "type": "object",
                              "properties": {
                                "server": {
                                  "type": "object",
                                  "properties": {
                                    "url": { "type": "string" },
                                    "timeout": { "type": "number" },
                                    "headers": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": ["url"]
                                },
                                "transport": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": ["streamable_http", "sse"]
                                    },
                                    "requestInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "eventSourceInit": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "reconnectionOptions": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "nullable": true
                                      }
                                    },
                                    "sessionId": { "type": "string" }
                                  },
                                  "required": ["type"]
                                },
                                "activeTools": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                }
                              },
                              "required": ["server"]
                            }
                          },
                          "required": ["type", "mcp"]
                        },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": { "type": "string", "nullable": true },
                        "headers": {
                          "type": "object",
                          "additionalProperties": { "type": "string" }
                        },
                        "status": {
                          "type": "string",
                          "enum": ["healthy", "unhealthy", "unknown", "disabled", "needs_auth"]
                        },
                        "lastHealthCheck": {
                          "type": "string",
                          "format": "date"
                        },
                        "lastError": { "type": "string" },
                        "availableTools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "inputSchema": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name"]
                          }
                        },
                        "lastToolsSync": { "type": "string", "format": "date" },
                        "version": { "type": "string" },
                        "createdAt": { "type": "string", "format": "date" },
                        "updatedAt": { "type": "string", "format": "date" }
                      },
                      "required": [
                        "id",
                        "tenantId",
                        "name",
                        "config",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/tools/{id}/oauth-login": {
      "get": {
        "summary": "Initiate OAuth login for MCP tool",
        "description": "Detects OAuth requirements and redirects to authorization server",
        "operationId": "initiate-oauth-login",
        "tags": ["Tools"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "302": { "description": "Redirect to OAuth authorization server" },
          "400": {
            "description": "OAuth not supported or configuration error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "404": {
            "description": "Tool not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/api-keys": {
      "get": {
        "summary": "List API Keys",
        "description": "List all API keys for a tenant with optional pagination",
        "operationId": "list-api-keys",
        "tags": ["CRUD API Keys"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "number", "minimum": 1, "default": 1 },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": { "type": "string", "description": "Filter by graph ID" },
            "required": false,
            "description": "Filter by graph ID",
            "name": "graphId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of API keys retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "graphId": { "type": "string" },
                          "publicId": { "type": "string" },
                          "keyPrefix": { "type": "string" },
                          "lastUsedAt": { "type": "string", "nullable": true },
                          "expiresAt": { "type": "string", "nullable": true },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        },
                        "required": [
                          "id",
                          "graphId",
                          "publicId",
                          "keyPrefix",
                          "lastUsedAt",
                          "expiresAt",
                          "createdAt",
                          "updatedAt"
                        ],
                        "example": {
                          "id": "key-12345",
                          "graphId": "support-graph",
                          "publicId": "abc123def456",
                          "keyPrefix": "sk_test_abc1",
                          "lastUsedAt": "2024-01-15T10:30:00Z",
                          "expiresAt": "2025-01-01T00:00:00Z",
                          "createdAt": "2024-01-01T00:00:00Z",
                          "updatedAt": "2024-01-01T00:00:00Z"
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1
                        },
                        "limit": {
                          "type": "number",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "total": { "type": "number" },
                        "pages": { "type": "number" }
                      },
                      "required": ["total", "pages"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create API Key",
        "description": "Create a new API key for a graph. Returns the full key (shown only once).",
        "operationId": "create-api-key",
        "tags": ["CRUD API Keys"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "graphId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "expiresAt": { "type": "string", "nullable": true },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" }
                },
                "required": ["graphId"],
                "example": {
                  "graphId": "support-graph",
                  "expiresAt": "2025-01-01T00:00:00Z"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "API key created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "apiKey": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "graphId": { "type": "string" },
                            "publicId": { "type": "string" },
                            "keyPrefix": { "type": "string" },
                            "lastUsedAt": {
                              "type": "string",
                              "nullable": true
                            },
                            "expiresAt": { "type": "string", "nullable": true },
                            "createdAt": { "type": "string" },
                            "updatedAt": { "type": "string" }
                          },
                          "required": [
                            "id",
                            "graphId",
                            "publicId",
                            "keyPrefix",
                            "lastUsedAt",
                            "expiresAt",
                            "createdAt",
                            "updatedAt"
                          ],
                          "example": {
                            "id": "key-12345",
                            "graphId": "support-graph",
                            "publicId": "abc123def456",
                            "keyPrefix": "sk_test_abc1",
                            "lastUsedAt": "2024-01-15T10:30:00Z",
                            "expiresAt": "2025-01-01T00:00:00Z",
                            "createdAt": "2024-01-01T00:00:00Z",
                            "updatedAt": "2024-01-01T00:00:00Z"
                          }
                        },
                        "key": {
                          "type": "string",
                          "description": "The full API key (shown only once)"
                        }
                      },
                      "required": ["apiKey", "key"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/api-keys/{id}": {
      "get": {
        "summary": "Get API Key",
        "description": "Get a specific API key by ID (does not return the actual key)",
        "operationId": "get-api-key-by-id",
        "tags": ["CRUD API Keys"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "API key found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "graphId": { "type": "string" },
                        "publicId": { "type": "string" },
                        "keyPrefix": { "type": "string" },
                        "lastUsedAt": { "type": "string", "nullable": true },
                        "expiresAt": { "type": "string", "nullable": true },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "graphId",
                        "publicId",
                        "keyPrefix",
                        "lastUsedAt",
                        "expiresAt",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "key-12345",
                        "graphId": "support-graph",
                        "publicId": "abc123def456",
                        "keyPrefix": "sk_test_abc1",
                        "lastUsedAt": "2024-01-15T10:30:00Z",
                        "expiresAt": "2025-01-01T00:00:00Z",
                        "createdAt": "2024-01-01T00:00:00Z",
                        "updatedAt": "2024-01-01T00:00:00Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update API Key",
        "description": "Update an API key (currently only expiration date can be changed)",
        "operationId": "update-api-key",
        "tags": ["CRUD API Keys"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "graphId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "lastUsedAt": { "type": "string", "nullable": true },
                  "expiresAt": { "type": "string", "nullable": true },
                  "updatedAt": { "type": "string" }
                },
                "example": { "expiresAt": "2025-12-31T23:59:59Z" },
                "examples": [
                  {
                    "name": "Update expiration date",
                    "value": { "expiresAt": "2025-12-31T23:59:59Z" }
                  },
                  {
                    "name": "Remove expiration date",
                    "value": { "expiresAt": null }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "graphId": { "type": "string" },
                        "publicId": { "type": "string" },
                        "keyPrefix": { "type": "string" },
                        "lastUsedAt": { "type": "string", "nullable": true },
                        "expiresAt": { "type": "string", "nullable": true },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      },
                      "required": [
                        "id",
                        "graphId",
                        "publicId",
                        "keyPrefix",
                        "lastUsedAt",
                        "expiresAt",
                        "createdAt",
                        "updatedAt"
                      ],
                      "example": {
                        "id": "key-12345",
                        "graphId": "support-graph",
                        "publicId": "abc123def456",
                        "keyPrefix": "sk_test_abc1",
                        "lastUsedAt": "2024-01-15T10:30:00Z",
                        "expiresAt": "2025-01-01T00:00:00Z",
                        "createdAt": "2024-01-01T00:00:00Z",
                        "updatedAt": "2024-01-01T00:00:00Z"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete API Key",
        "description": "Delete an API key permanently",
        "operationId": "delete-api-key",
        "tags": ["CRUD API Keys"],
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_-]+$",
              "description": "URL-safe resource identifier"
            },
            "required": true,
            "description": "URL-safe resource identifier",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "API key deleted successfully" },
          "404": {
            "description": "API key not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/graph": {
      "post": {
        "summary": "Create Full Graph",
        "operationId": "create-full-graph",
        "tags": ["CRUD Full Graph"],
        "description": "Create a complete agent graph with all agents, tools, and relationships from JSON definition",
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string", "nullable": true },
                  "defaultSubAgentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "contextConfigId": { "type": "string", "nullable": true },
                  "modelSettings": {
                    "type": "object",
                    "properties": {
                      "model": { "type": "string" },
                      "structuredOutput": { "type": "string" },
                      "summarizer": { "type": "string" },
                      "providerOptions": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      }
                    }
                  },
                  "statusUpdates": {
                    "type": "object",
                    "properties": {
                      "numEvents": { "type": "number" },
                      "timeInSeconds": { "type": "number" },
                      "model": { "type": "string" },
                      "prompt": { "type": "string", "maxLength": 2000 },
                      "statusComponents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "schema": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["object"]
                                },
                                "properties": {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                "required": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                }
                              },
                              "required": ["type", "properties"]
                            }
                          },
                          "required": ["id", "name", "schema"]
                        }
                      }
                    }
                  },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" },
                  "agents": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "pattern": "^[a-zA-Z0-9_-]+$",
                              "description": "URL-safe resource identifier"
                            },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "instructions": { "type": "string" },
                            "conversationHistoryConfig": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            },
                            "modelSettings": {
                              "type": "object",
                              "properties": {
                                "model": { "type": "string" },
                                "structuredOutput": { "type": "string" },
                                "summarizer": { "type": "string" },
                                "providerOptions": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  }
                                }
                              }
                            },
                            "createdAt": { "type": "string" },
                            "updatedAt": { "type": "string" },
                            "type": { "type": "string", "enum": ["internal"] },
                            "tools": {
                              "type": "array",
                              "items": { "type": "string" }
                            },
                            "dataComponents": {
                              "type": "array",
                              "items": { "type": "string" }
                            },
                            "artifactComponents": {
                              "type": "array",
                              "items": { "type": "string" }
                            },
                            "canTransferTo": {
                              "type": "array",
                              "items": { "type": "string" }
                            },
                            "canDelegateTo": {
                              "type": "array",
                              "items": { "type": "string" }
                            }
                          },
                          "required": ["id", "name", "description", "instructions", "tools"],
                          "example": {
                            "id": "customer-support-agent",
                            "name": "Customer Support Agent",
                            "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                            "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "pattern": "^[a-zA-Z0-9_-]+$",
                              "description": "URL-safe resource identifier"
                            },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "baseUrl": { "type": "string" },
                            "credentialReferenceId": {
                              "type": "string",
                              "nullable": true
                            },
                            "headers": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            },
                            "createdAt": { "type": "string" },
                            "updatedAt": { "type": "string" },
                            "type": { "type": "string", "enum": ["external"] }
                          },
                          "required": ["id", "name", "description", "baseUrl", "type"],
                          "example": {
                            "id": "external-customer-agent",
                            "name": "External Customer Agent",
                            "description": "An external AI agent for customer support hosted on another service",
                            "baseUrl": "https://api.example.com/agent"
                          }
                        }
                      ]
                    }
                  },
                  "tools": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "config": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "headers": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "imageUrl": { "type": "string" },
                        "capabilities": {
                          "type": "object",
                          "properties": {
                            "tools": { "type": "boolean" },
                            "streaming": { "type": "boolean" }
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": ["healthy", "unhealthy", "unknown"]
                        },
                        "lastHealthCheck": { "type": "string" },
                        "lastError": { "type": "string" },
                        "availableTools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "inputSchema": { "nullable": true }
                            },
                            "required": ["name"]
                          }
                        },
                        "lastToolsSync": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "activeTools": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      },
                      "required": ["id", "name", "config"]
                    }
                  },
                  "credentialReferences": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "type": { "type": "string" },
                        "credentialStoreId": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "retrievalParams": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      },
                      "required": ["id", "type", "credentialStoreId"],
                      "example": {
                        "id": "slack-main-workspace",
                        "type": "nango",
                        "credentialStoreId": "nango-default",
                        "retrievalParams": {
                          "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                          "providerConfigKey": "slack-agent"
                        }
                      }
                    }
                  },
                  "dataComponents": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "props": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      },
                      "required": ["id", "name", "description"],
                      "example": {
                        "id": "orders-list",
                        "name": "OrdersList",
                        "description": "Display a list of user orders with interactive options",
                        "props": {
                          "type": "object",
                          "properties": {
                            "orders": {
                              "type": "array",
                              "items": { "type": "string" },
                              "description": "Order items to select from"
                            }
                          },
                          "required": ["orders"]
                        }
                      }
                    }
                  },
                  "artifactComponents": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "summaryProps": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        },
                        "fullProps": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      },
                      "required": ["name", "description"],
                      "example": {
                        "id": "user-profile-card",
                        "name": "UserProfileCard",
                        "description": "Display user profile information with interactive elements",
                        "summaryProps": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "User name"
                            },
                            "role": {
                              "type": "string",
                              "description": "User role"
                            }
                          },
                          "required": ["name"]
                        },
                        "fullProps": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "name": { "type": "string" },
                                "email": { "type": "string" },
                                "avatar": { "type": "string" },
                                "role": { "type": "string" },
                                "bio": { "type": "string" }
                              },
                              "description": "Complete user information"
                            },
                            "showActions": {
                              "type": "boolean",
                              "description": "Whether to show action buttons",
                              "default": true
                            },
                            "metadata": {
                              "type": "object",
                              "description": "Additional metadata for the profile"
                            }
                          },
                          "required": ["user"]
                        }
                      }
                    }
                  },
                  "contextConfig": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z0-9_-]+$",
                        "description": "URL-safe resource identifier"
                      },
                      "name": { "type": "string" },
                      "description": { "type": "string" },
                      "requestContextSchema": {
                        "anyOf": [
                          { "type": "string" },
                          { "type": "number" },
                          { "type": "boolean" },
                          { "nullable": true },
                          {
                            "type": "object",
                            "additionalProperties": { "nullable": true }
                          },
                          { "type": "array", "items": { "nullable": true } },
                          { "nullable": true }
                        ]
                      },
                      "contextVariables": {
                        "anyOf": [
                          { "type": "string" },
                          { "type": "number" },
                          { "type": "boolean" },
                          { "nullable": true },
                          {
                            "type": "object",
                            "additionalProperties": { "nullable": true }
                          },
                          { "type": "array", "items": { "nullable": true } },
                          { "nullable": true }
                        ]
                      }
                    },
                    "required": ["id", "name", "description"],
                    "example": {
                      "id": "user-context-config",
                      "name": "User Context Configuration",
                      "description": "Context configuration for user authentication and preferences",
                      "requestContextSchema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string",
                            "description": "User identifier"
                          },
                          "sessionToken": {
                            "type": "string",
                            "description": "Session token for authentication"
                          }
                        },
                        "required": ["userId"]
                      },
                      "contextVariables": {
                        "userProfile": {
                          "id": "user-profile",
                          "name": "User Profile",
                          "trigger": "initialization",
                          "fetchConfig": {
                            "url": "https://api.example.com/users/{{requestContext.userId}}",
                            "method": "GET",
                            "headers": {
                              "Authorization": "Bearer {{requestContext.sessionToken}}"
                            }
                          },
                          "defaultValue": { "name": "Anonymous User" }
                        }
                      }
                    }
                  }
                },
                "required": ["id", "name", "agents", "tools"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Full graph created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "defaultSubAgentId": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "contextConfigId": {
                          "type": "string",
                          "nullable": true
                        },
                        "modelSettings": {
                          "type": "object",
                          "properties": {
                            "model": { "type": "string" },
                            "structuredOutput": { "type": "string" },
                            "summarizer": { "type": "string" },
                            "providerOptions": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            }
                          }
                        },
                        "statusUpdates": {
                          "type": "object",
                          "properties": {
                            "numEvents": { "type": "number" },
                            "timeInSeconds": { "type": "number" },
                            "model": { "type": "string" },
                            "prompt": { "type": "string", "maxLength": 2000 },
                            "statusComponents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["object"]
                                      },
                                      "properties": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      "required": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      }
                                    },
                                    "required": ["type", "properties"]
                                  }
                                },
                                "required": ["id", "name", "schema"]
                              }
                            }
                          }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "agents": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "instructions": { "type": "string" },
                                  "conversationHistoryConfig": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "modelSettings": {
                                    "type": "object",
                                    "properties": {
                                      "model": { "type": "string" },
                                      "structuredOutput": { "type": "string" },
                                      "summarizer": { "type": "string" },
                                      "providerOptions": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "nullable": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["internal"]
                                  },
                                  "tools": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "dataComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "artifactComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canTransferTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canDelegateTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  }
                                },
                                "required": ["id", "name", "description", "instructions", "tools"],
                                "example": {
                                  "id": "customer-support-agent",
                                  "name": "Customer Support Agent",
                                  "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                                  "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "baseUrl": { "type": "string" },
                                  "credentialReferenceId": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "headers": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["external"]
                                  }
                                },
                                "required": ["id", "name", "description", "baseUrl", "type"],
                                "example": {
                                  "id": "external-customer-agent",
                                  "name": "External Customer Agent",
                                  "description": "An external AI agent for customer support hosted on another service",
                                  "baseUrl": "https://api.example.com/agent"
                                }
                              }
                            ]
                          }
                        },
                        "tools": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "config": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "credentialReferenceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "headers": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "imageUrl": { "type": "string" },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "tools": { "type": "boolean" },
                                  "streaming": { "type": "boolean" }
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": ["healthy", "unhealthy", "unknown"]
                              },
                              "lastHealthCheck": { "type": "string" },
                              "lastError": { "type": "string" },
                              "availableTools": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": { "type": "string" },
                                    "description": { "type": "string" },
                                    "inputSchema": { "nullable": true }
                                  },
                                  "required": ["name"]
                                }
                              },
                              "lastToolsSync": { "type": "string" },
                              "createdAt": { "type": "string" },
                              "updatedAt": { "type": "string" },
                              "activeTools": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["id", "name", "config"]
                          }
                        },
                        "credentialReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "type": { "type": "string" },
                              "credentialStoreId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "retrievalParams": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "type", "credentialStoreId"],
                            "example": {
                              "id": "slack-main-workspace",
                              "type": "nango",
                              "credentialStoreId": "nango-default",
                              "retrievalParams": {
                                "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                                "providerConfigKey": "slack-agent"
                              }
                            }
                          }
                        },
                        "dataComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "props": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "name", "description"],
                            "example": {
                              "id": "orders-list",
                              "name": "OrdersList",
                              "description": "Display a list of user orders with interactive options",
                              "props": {
                                "type": "object",
                                "properties": {
                                  "orders": {
                                    "type": "array",
                                    "items": { "type": "string" },
                                    "description": "Order items to select from"
                                  }
                                },
                                "required": ["orders"]
                              }
                            }
                          }
                        },
                        "artifactComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "summaryProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "fullProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name", "description"],
                            "example": {
                              "id": "user-profile-card",
                              "name": "UserProfileCard",
                              "description": "Display user profile information with interactive elements",
                              "summaryProps": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "User name"
                                  },
                                  "role": {
                                    "type": "string",
                                    "description": "User role"
                                  }
                                },
                                "required": ["name"]
                              },
                              "fullProps": {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "name": { "type": "string" },
                                      "email": { "type": "string" },
                                      "avatar": { "type": "string" },
                                      "role": { "type": "string" },
                                      "bio": { "type": "string" }
                                    },
                                    "description": "Complete user information"
                                  },
                                  "showActions": {
                                    "type": "boolean",
                                    "description": "Whether to show action buttons",
                                    "default": true
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "Additional metadata for the profile"
                                  }
                                },
                                "required": ["user"]
                              }
                            }
                          }
                        },
                        "contextConfig": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "pattern": "^[a-zA-Z0-9_-]+$",
                              "description": "URL-safe resource identifier"
                            },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "requestContextSchema": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            },
                            "contextVariables": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            }
                          },
                          "required": ["id", "name", "description"],
                          "example": {
                            "id": "user-context-config",
                            "name": "User Context Configuration",
                            "description": "Context configuration for user authentication and preferences",
                            "requestContextSchema": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "description": "User identifier"
                                },
                                "sessionToken": {
                                  "type": "string",
                                  "description": "Session token for authentication"
                                }
                              },
                              "required": ["userId"]
                            },
                            "contextVariables": {
                              "userProfile": {
                                "id": "user-profile",
                                "name": "User Profile",
                                "trigger": "initialization",
                                "fetchConfig": {
                                  "url": "https://api.example.com/users/{{requestContext.userId}}",
                                  "method": "GET",
                                  "headers": {
                                    "Authorization": "Bearer {{requestContext.sessionToken}}"
                                  }
                                },
                                "defaultValue": { "name": "Anonymous User" }
                              }
                            }
                          }
                        }
                      },
                      "required": ["id", "name", "agents", "tools"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "409": {
            "description": "Graph already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "message": { "type": "string" },
                    "details": { "nullable": true }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/crud/projects/{projectId}/graph/{graphId}": {
      "get": {
        "summary": "Get Full Graph",
        "operationId": "get-full-graph",
        "tags": ["CRUD Full Graph"],
        "description": "Retrieve a complete agent graph definition with all agents, tools, and relationships",
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "graphId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Full graph found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "defaultSubAgentId": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "contextConfigId": {
                          "type": "string",
                          "nullable": true
                        },
                        "modelSettings": {
                          "type": "object",
                          "properties": {
                            "model": { "type": "string" },
                            "structuredOutput": { "type": "string" },
                            "summarizer": { "type": "string" },
                            "providerOptions": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            }
                          }
                        },
                        "statusUpdates": {
                          "type": "object",
                          "properties": {
                            "numEvents": { "type": "number" },
                            "timeInSeconds": { "type": "number" },
                            "model": { "type": "string" },
                            "prompt": { "type": "string", "maxLength": 2000 },
                            "statusComponents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["object"]
                                      },
                                      "properties": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      "required": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      }
                                    },
                                    "required": ["type", "properties"]
                                  }
                                },
                                "required": ["id", "name", "schema"]
                              }
                            }
                          }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "agents": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "instructions": { "type": "string" },
                                  "conversationHistoryConfig": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "modelSettings": {
                                    "type": "object",
                                    "properties": {
                                      "model": { "type": "string" },
                                      "structuredOutput": { "type": "string" },
                                      "summarizer": { "type": "string" },
                                      "providerOptions": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "nullable": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["internal"]
                                  },
                                  "tools": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "dataComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "artifactComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canTransferTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canDelegateTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  }
                                },
                                "required": ["id", "name", "description", "instructions", "tools"],
                                "example": {
                                  "id": "customer-support-agent",
                                  "name": "Customer Support Agent",
                                  "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                                  "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "baseUrl": { "type": "string" },
                                  "credentialReferenceId": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "headers": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["external"]
                                  }
                                },
                                "required": ["id", "name", "description", "baseUrl", "type"],
                                "example": {
                                  "id": "external-customer-agent",
                                  "name": "External Customer Agent",
                                  "description": "An external AI agent for customer support hosted on another service",
                                  "baseUrl": "https://api.example.com/agent"
                                }
                              }
                            ]
                          }
                        },
                        "tools": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "config": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "credentialReferenceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "headers": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "imageUrl": { "type": "string" },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "tools": { "type": "boolean" },
                                  "streaming": { "type": "boolean" }
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": ["healthy", "unhealthy", "unknown"]
                              },
                              "lastHealthCheck": { "type": "string" },
                              "lastError": { "type": "string" },
                              "availableTools": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": { "type": "string" },
                                    "description": { "type": "string" },
                                    "inputSchema": { "nullable": true }
                                  },
                                  "required": ["name"]
                                }
                              },
                              "lastToolsSync": { "type": "string" },
                              "createdAt": { "type": "string" },
                              "updatedAt": { "type": "string" },
                              "activeTools": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["id", "name", "config"]
                          }
                        },
                        "credentialReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "type": { "type": "string" },
                              "credentialStoreId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "retrievalParams": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "type", "credentialStoreId"],
                            "example": {
                              "id": "slack-main-workspace",
                              "type": "nango",
                              "credentialStoreId": "nango-default",
                              "retrievalParams": {
                                "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                                "providerConfigKey": "slack-agent"
                              }
                            }
                          }
                        },
                        "dataComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "props": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "name", "description"],
                            "example": {
                              "id": "orders-list",
                              "name": "OrdersList",
                              "description": "Display a list of user orders with interactive options",
                              "props": {
                                "type": "object",
                                "properties": {
                                  "orders": {
                                    "type": "array",
                                    "items": { "type": "string" },
                                    "description": "Order items to select from"
                                  }
                                },
                                "required": ["orders"]
                              }
                            }
                          }
                        },
                        "artifactComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "summaryProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "fullProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name", "description"],
                            "example": {
                              "id": "user-profile-card",
                              "name": "UserProfileCard",
                              "description": "Display user profile information with interactive elements",
                              "summaryProps": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "User name"
                                  },
                                  "role": {
                                    "type": "string",
                                    "description": "User role"
                                  }
                                },
                                "required": ["name"]
                              },
                              "fullProps": {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "name": { "type": "string" },
                                      "email": { "type": "string" },
                                      "avatar": { "type": "string" },
                                      "role": { "type": "string" },
                                      "bio": { "type": "string" }
                                    },
                                    "description": "Complete user information"
                                  },
                                  "showActions": {
                                    "type": "boolean",
                                    "description": "Whether to show action buttons",
                                    "default": true
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "Additional metadata for the profile"
                                  }
                                },
                                "required": ["user"]
                              }
                            }
                          }
                        },
                        "contextConfig": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "pattern": "^[a-zA-Z0-9_-]+$",
                              "description": "URL-safe resource identifier"
                            },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "requestContextSchema": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            },
                            "contextVariables": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            }
                          },
                          "required": ["id", "name", "description"],
                          "example": {
                            "id": "user-context-config",
                            "name": "User Context Configuration",
                            "description": "Context configuration for user authentication and preferences",
                            "requestContextSchema": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "description": "User identifier"
                                },
                                "sessionToken": {
                                  "type": "string",
                                  "description": "Session token for authentication"
                                }
                              },
                              "required": ["userId"]
                            },
                            "contextVariables": {
                              "userProfile": {
                                "id": "user-profile",
                                "name": "User Profile",
                                "trigger": "initialization",
                                "fetchConfig": {
                                  "url": "https://api.example.com/users/{{requestContext.userId}}",
                                  "method": "GET",
                                  "headers": {
                                    "Authorization": "Bearer {{requestContext.sessionToken}}"
                                  }
                                },
                                "defaultValue": { "name": "Anonymous User" }
                              }
                            }
                          }
                        }
                      },
                      "required": ["id", "name", "agents", "tools"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Full Graph",
        "operationId": "update-full-graph",
        "tags": ["CRUD Full Graph"],
        "description": "Update or create a complete agent graph with all agents, tools, and relationships from JSON definition",
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "graphId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "name": { "type": "string" },
                  "description": { "type": "string", "nullable": true },
                  "defaultSubAgentId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "description": "URL-safe resource identifier"
                  },
                  "contextConfigId": { "type": "string", "nullable": true },
                  "modelSettings": {
                    "type": "object",
                    "properties": {
                      "model": { "type": "string" },
                      "structuredOutput": { "type": "string" },
                      "summarizer": { "type": "string" },
                      "providerOptions": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      }
                    }
                  },
                  "statusUpdates": {
                    "type": "object",
                    "properties": {
                      "numEvents": { "type": "number" },
                      "timeInSeconds": { "type": "number" },
                      "model": { "type": "string" },
                      "prompt": { "type": "string", "maxLength": 2000 },
                      "statusComponents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "schema": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["object"]
                                },
                                "properties": {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                "required": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                }
                              },
                              "required": ["type", "properties"]
                            }
                          },
                          "required": ["id", "name", "schema"]
                        }
                      }
                    }
                  },
                  "createdAt": { "type": "string" },
                  "updatedAt": { "type": "string" },
                  "agents": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "pattern": "^[a-zA-Z0-9_-]+$",
                              "description": "URL-safe resource identifier"
                            },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "instructions": { "type": "string" },
                            "conversationHistoryConfig": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            },
                            "modelSettings": {
                              "type": "object",
                              "properties": {
                                "model": { "type": "string" },
                                "structuredOutput": { "type": "string" },
                                "summarizer": { "type": "string" },
                                "providerOptions": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  }
                                }
                              }
                            },
                            "createdAt": { "type": "string" },
                            "updatedAt": { "type": "string" },
                            "type": { "type": "string", "enum": ["internal"] },
                            "tools": {
                              "type": "array",
                              "items": { "type": "string" }
                            },
                            "dataComponents": {
                              "type": "array",
                              "items": { "type": "string" }
                            },
                            "artifactComponents": {
                              "type": "array",
                              "items": { "type": "string" }
                            },
                            "canTransferTo": {
                              "type": "array",
                              "items": { "type": "string" }
                            },
                            "canDelegateTo": {
                              "type": "array",
                              "items": { "type": "string" }
                            }
                          },
                          "required": ["id", "name", "description", "instructions", "tools"],
                          "example": {
                            "id": "customer-support-agent",
                            "name": "Customer Support Agent",
                            "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                            "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "pattern": "^[a-zA-Z0-9_-]+$",
                              "description": "URL-safe resource identifier"
                            },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "baseUrl": { "type": "string" },
                            "credentialReferenceId": {
                              "type": "string",
                              "nullable": true
                            },
                            "headers": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            },
                            "createdAt": { "type": "string" },
                            "updatedAt": { "type": "string" },
                            "type": { "type": "string", "enum": ["external"] }
                          },
                          "required": ["id", "name", "description", "baseUrl", "type"],
                          "example": {
                            "id": "external-customer-agent",
                            "name": "External Customer Agent",
                            "description": "An external AI agent for customer support hosted on another service",
                            "baseUrl": "https://api.example.com/agent"
                          }
                        }
                      ]
                    }
                  },
                  "tools": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "config": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "credentialReferenceId": {
                          "type": "string",
                          "nullable": true
                        },
                        "headers": {
                          "anyOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" },
                            { "nullable": true },
                            {
                              "type": "object",
                              "additionalProperties": { "nullable": true }
                            },
                            { "type": "array", "items": { "nullable": true } },
                            { "nullable": true }
                          ]
                        },
                        "imageUrl": { "type": "string" },
                        "capabilities": {
                          "type": "object",
                          "properties": {
                            "tools": { "type": "boolean" },
                            "streaming": { "type": "boolean" }
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": ["healthy", "unhealthy", "unknown"]
                        },
                        "lastHealthCheck": { "type": "string" },
                        "lastError": { "type": "string" },
                        "availableTools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "inputSchema": { "nullable": true }
                            },
                            "required": ["name"]
                          }
                        },
                        "lastToolsSync": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "activeTools": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      },
                      "required": ["id", "name", "config"]
                    }
                  },
                  "credentialReferences": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "type": { "type": "string" },
                        "credentialStoreId": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "retrievalParams": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      },
                      "required": ["id", "type", "credentialStoreId"],
                      "example": {
                        "id": "slack-main-workspace",
                        "type": "nango",
                        "credentialStoreId": "nango-default",
                        "retrievalParams": {
                          "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                          "providerConfigKey": "slack-agent"
                        }
                      }
                    }
                  },
                  "dataComponents": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "props": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      },
                      "required": ["id", "name", "description"],
                      "example": {
                        "id": "orders-list",
                        "name": "OrdersList",
                        "description": "Display a list of user orders with interactive options",
                        "props": {
                          "type": "object",
                          "properties": {
                            "orders": {
                              "type": "array",
                              "items": { "type": "string" },
                              "description": "Order items to select from"
                            }
                          },
                          "required": ["orders"]
                        }
                      }
                    }
                  },
                  "artifactComponents": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string" },
                        "summaryProps": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        },
                        "fullProps": {
                          "type": "object",
                          "additionalProperties": { "nullable": true }
                        }
                      },
                      "required": ["name", "description"],
                      "example": {
                        "id": "user-profile-card",
                        "name": "UserProfileCard",
                        "description": "Display user profile information with interactive elements",
                        "summaryProps": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "User name"
                            },
                            "role": {
                              "type": "string",
                              "description": "User role"
                            }
                          },
                          "required": ["name"]
                        },
                        "fullProps": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "name": { "type": "string" },
                                "email": { "type": "string" },
                                "avatar": { "type": "string" },
                                "role": { "type": "string" },
                                "bio": { "type": "string" }
                              },
                              "description": "Complete user information"
                            },
                            "showActions": {
                              "type": "boolean",
                              "description": "Whether to show action buttons",
                              "default": true
                            },
                            "metadata": {
                              "type": "object",
                              "description": "Additional metadata for the profile"
                            }
                          },
                          "required": ["user"]
                        }
                      }
                    }
                  },
                  "contextConfig": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "pattern": "^[a-zA-Z0-9_-]+$",
                        "description": "URL-safe resource identifier"
                      },
                      "name": { "type": "string" },
                      "description": { "type": "string" },
                      "requestContextSchema": {
                        "anyOf": [
                          { "type": "string" },
                          { "type": "number" },
                          { "type": "boolean" },
                          { "nullable": true },
                          {
                            "type": "object",
                            "additionalProperties": { "nullable": true }
                          },
                          { "type": "array", "items": { "nullable": true } },
                          { "nullable": true }
                        ]
                      },
                      "contextVariables": {
                        "anyOf": [
                          { "type": "string" },
                          { "type": "number" },
                          { "type": "boolean" },
                          { "nullable": true },
                          {
                            "type": "object",
                            "additionalProperties": { "nullable": true }
                          },
                          { "type": "array", "items": { "nullable": true } },
                          { "nullable": true }
                        ]
                      }
                    },
                    "required": ["id", "name", "description"],
                    "example": {
                      "id": "user-context-config",
                      "name": "User Context Configuration",
                      "description": "Context configuration for user authentication and preferences",
                      "requestContextSchema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string",
                            "description": "User identifier"
                          },
                          "sessionToken": {
                            "type": "string",
                            "description": "Session token for authentication"
                          }
                        },
                        "required": ["userId"]
                      },
                      "contextVariables": {
                        "userProfile": {
                          "id": "user-profile",
                          "name": "User Profile",
                          "trigger": "initialization",
                          "fetchConfig": {
                            "url": "https://api.example.com/users/{{requestContext.userId}}",
                            "method": "GET",
                            "headers": {
                              "Authorization": "Bearer {{requestContext.sessionToken}}"
                            }
                          },
                          "defaultValue": { "name": "Anonymous User" }
                        }
                      }
                    }
                  }
                },
                "required": ["id", "name", "agents", "tools"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Full graph updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "defaultSubAgentId": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "contextConfigId": {
                          "type": "string",
                          "nullable": true
                        },
                        "modelSettings": {
                          "type": "object",
                          "properties": {
                            "model": { "type": "string" },
                            "structuredOutput": { "type": "string" },
                            "summarizer": { "type": "string" },
                            "providerOptions": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            }
                          }
                        },
                        "statusUpdates": {
                          "type": "object",
                          "properties": {
                            "numEvents": { "type": "number" },
                            "timeInSeconds": { "type": "number" },
                            "model": { "type": "string" },
                            "prompt": { "type": "string", "maxLength": 2000 },
                            "statusComponents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["object"]
                                      },
                                      "properties": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      "required": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      }
                                    },
                                    "required": ["type", "properties"]
                                  }
                                },
                                "required": ["id", "name", "schema"]
                              }
                            }
                          }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "agents": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "instructions": { "type": "string" },
                                  "conversationHistoryConfig": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "modelSettings": {
                                    "type": "object",
                                    "properties": {
                                      "model": { "type": "string" },
                                      "structuredOutput": { "type": "string" },
                                      "summarizer": { "type": "string" },
                                      "providerOptions": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "nullable": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["internal"]
                                  },
                                  "tools": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "dataComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "artifactComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canTransferTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canDelegateTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  }
                                },
                                "required": ["id", "name", "description", "instructions", "tools"],
                                "example": {
                                  "id": "customer-support-agent",
                                  "name": "Customer Support Agent",
                                  "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                                  "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "baseUrl": { "type": "string" },
                                  "credentialReferenceId": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "headers": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["external"]
                                  }
                                },
                                "required": ["id", "name", "description", "baseUrl", "type"],
                                "example": {
                                  "id": "external-customer-agent",
                                  "name": "External Customer Agent",
                                  "description": "An external AI agent for customer support hosted on another service",
                                  "baseUrl": "https://api.example.com/agent"
                                }
                              }
                            ]
                          }
                        },
                        "tools": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "config": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "credentialReferenceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "headers": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "imageUrl": { "type": "string" },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "tools": { "type": "boolean" },
                                  "streaming": { "type": "boolean" }
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": ["healthy", "unhealthy", "unknown"]
                              },
                              "lastHealthCheck": { "type": "string" },
                              "lastError": { "type": "string" },
                              "availableTools": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": { "type": "string" },
                                    "description": { "type": "string" },
                                    "inputSchema": { "nullable": true }
                                  },
                                  "required": ["name"]
                                }
                              },
                              "lastToolsSync": { "type": "string" },
                              "createdAt": { "type": "string" },
                              "updatedAt": { "type": "string" },
                              "activeTools": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["id", "name", "config"]
                          }
                        },
                        "credentialReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "type": { "type": "string" },
                              "credentialStoreId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "retrievalParams": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "type", "credentialStoreId"],
                            "example": {
                              "id": "slack-main-workspace",
                              "type": "nango",
                              "credentialStoreId": "nango-default",
                              "retrievalParams": {
                                "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                                "providerConfigKey": "slack-agent"
                              }
                            }
                          }
                        },
                        "dataComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "props": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "name", "description"],
                            "example": {
                              "id": "orders-list",
                              "name": "OrdersList",
                              "description": "Display a list of user orders with interactive options",
                              "props": {
                                "type": "object",
                                "properties": {
                                  "orders": {
                                    "type": "array",
                                    "items": { "type": "string" },
                                    "description": "Order items to select from"
                                  }
                                },
                                "required": ["orders"]
                              }
                            }
                          }
                        },
                        "artifactComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "summaryProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "fullProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name", "description"],
                            "example": {
                              "id": "user-profile-card",
                              "name": "UserProfileCard",
                              "description": "Display user profile information with interactive elements",
                              "summaryProps": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "User name"
                                  },
                                  "role": {
                                    "type": "string",
                                    "description": "User role"
                                  }
                                },
                                "required": ["name"]
                              },
                              "fullProps": {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "name": { "type": "string" },
                                      "email": { "type": "string" },
                                      "avatar": { "type": "string" },
                                      "role": { "type": "string" },
                                      "bio": { "type": "string" }
                                    },
                                    "description": "Complete user information"
                                  },
                                  "showActions": {
                                    "type": "boolean",
                                    "description": "Whether to show action buttons",
                                    "default": true
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "Additional metadata for the profile"
                                  }
                                },
                                "required": ["user"]
                              }
                            }
                          }
                        },
                        "contextConfig": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "pattern": "^[a-zA-Z0-9_-]+$",
                              "description": "URL-safe resource identifier"
                            },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "requestContextSchema": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            },
                            "contextVariables": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            }
                          },
                          "required": ["id", "name", "description"],
                          "example": {
                            "id": "user-context-config",
                            "name": "User Context Configuration",
                            "description": "Context configuration for user authentication and preferences",
                            "requestContextSchema": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "description": "User identifier"
                                },
                                "sessionToken": {
                                  "type": "string",
                                  "description": "Session token for authentication"
                                }
                              },
                              "required": ["userId"]
                            },
                            "contextVariables": {
                              "userProfile": {
                                "id": "user-profile",
                                "name": "User Profile",
                                "trigger": "initialization",
                                "fetchConfig": {
                                  "url": "https://api.example.com/users/{{requestContext.userId}}",
                                  "method": "GET",
                                  "headers": {
                                    "Authorization": "Bearer {{requestContext.sessionToken}}"
                                  }
                                },
                                "defaultValue": { "name": "Anonymous User" }
                              }
                            }
                          }
                        }
                      },
                      "required": ["id", "name", "agents", "tools"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "201": {
            "description": "Full graph created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "name": { "type": "string" },
                        "description": { "type": "string", "nullable": true },
                        "defaultSubAgentId": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "description": "URL-safe resource identifier"
                        },
                        "contextConfigId": {
                          "type": "string",
                          "nullable": true
                        },
                        "modelSettings": {
                          "type": "object",
                          "properties": {
                            "model": { "type": "string" },
                            "structuredOutput": { "type": "string" },
                            "summarizer": { "type": "string" },
                            "providerOptions": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            }
                          }
                        },
                        "statusUpdates": {
                          "type": "object",
                          "properties": {
                            "numEvents": { "type": "number" },
                            "timeInSeconds": { "type": "number" },
                            "model": { "type": "string" },
                            "prompt": { "type": "string", "maxLength": 2000 },
                            "statusComponents": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["object"]
                                      },
                                      "properties": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      "required": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      }
                                    },
                                    "required": ["type", "properties"]
                                  }
                                },
                                "required": ["id", "name", "schema"]
                              }
                            }
                          }
                        },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "agents": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "instructions": { "type": "string" },
                                  "conversationHistoryConfig": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "modelSettings": {
                                    "type": "object",
                                    "properties": {
                                      "model": { "type": "string" },
                                      "structuredOutput": { "type": "string" },
                                      "summarizer": { "type": "string" },
                                      "providerOptions": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "nullable": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["internal"]
                                  },
                                  "tools": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "dataComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "artifactComponents": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canTransferTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  },
                                  "canDelegateTo": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                  }
                                },
                                "required": ["id", "name", "description", "instructions", "tools"],
                                "example": {
                                  "id": "customer-support-agent",
                                  "name": "Customer Support Agent",
                                  "description": "An AI agent specialized in handling customer support inquiries and resolving customer issues",
                                  "instructions": "You are a helpful customer support agent. Be polite, professional, and empathetic. Help customers resolve their issues efficiently while maintaining a friendly tone. If you cannot resolve an issue, escalate it appropriately."
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "description": "URL-safe resource identifier"
                                  },
                                  "name": { "type": "string" },
                                  "description": { "type": "string" },
                                  "baseUrl": { "type": "string" },
                                  "credentialReferenceId": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "headers": {
                                    "anyOf": [
                                      { "type": "string" },
                                      { "type": "number" },
                                      { "type": "boolean" },
                                      { "nullable": true },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "nullable": true
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": { "nullable": true }
                                      },
                                      { "nullable": true }
                                    ]
                                  },
                                  "createdAt": { "type": "string" },
                                  "updatedAt": { "type": "string" },
                                  "type": {
                                    "type": "string",
                                    "enum": ["external"]
                                  }
                                },
                                "required": ["id", "name", "description", "baseUrl", "type"],
                                "example": {
                                  "id": "external-customer-agent",
                                  "name": "External Customer Agent",
                                  "description": "An external AI agent for customer support hosted on another service",
                                  "baseUrl": "https://api.example.com/agent"
                                }
                              }
                            ]
                          }
                        },
                        "tools": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "config": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "credentialReferenceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "headers": {
                                "anyOf": [
                                  { "type": "string" },
                                  { "type": "number" },
                                  { "type": "boolean" },
                                  { "nullable": true },
                                  {
                                    "type": "object",
                                    "additionalProperties": { "nullable": true }
                                  },
                                  {
                                    "type": "array",
                                    "items": { "nullable": true }
                                  },
                                  { "nullable": true }
                                ]
                              },
                              "imageUrl": { "type": "string" },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "tools": { "type": "boolean" },
                                  "streaming": { "type": "boolean" }
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": ["healthy", "unhealthy", "unknown"]
                              },
                              "lastHealthCheck": { "type": "string" },
                              "lastError": { "type": "string" },
                              "availableTools": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": { "type": "string" },
                                    "description": { "type": "string" },
                                    "inputSchema": { "nullable": true }
                                  },
                                  "required": ["name"]
                                }
                              },
                              "lastToolsSync": { "type": "string" },
                              "createdAt": { "type": "string" },
                              "updatedAt": { "type": "string" },
                              "activeTools": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["id", "name", "config"]
                          }
                        },
                        "credentialReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "type": { "type": "string" },
                              "credentialStoreId": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "retrievalParams": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "type", "credentialStoreId"],
                            "example": {
                              "id": "slack-main-workspace",
                              "type": "nango",
                              "credentialStoreId": "nango-default",
                              "retrievalParams": {
                                "connectionId": "2327fe1f-8b12-4597-91fb-ff1d76f92f85",
                                "providerConfigKey": "slack-agent"
                              }
                            }
                          }
                        },
                        "dataComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "props": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["id", "name", "description"],
                            "example": {
                              "id": "orders-list",
                              "name": "OrdersList",
                              "description": "Display a list of user orders with interactive options",
                              "props": {
                                "type": "object",
                                "properties": {
                                  "orders": {
                                    "type": "array",
                                    "items": { "type": "string" },
                                    "description": "Order items to select from"
                                  }
                                },
                                "required": ["orders"]
                              }
                            }
                          }
                        },
                        "artifactComponents": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "description": "URL-safe resource identifier"
                              },
                              "name": { "type": "string" },
                              "description": { "type": "string" },
                              "summaryProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              },
                              "fullProps": {
                                "type": "object",
                                "additionalProperties": { "nullable": true }
                              }
                            },
                            "required": ["name", "description"],
                            "example": {
                              "id": "user-profile-card",
                              "name": "UserProfileCard",
                              "description": "Display user profile information with interactive elements",
                              "summaryProps": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "User name"
                                  },
                                  "role": {
                                    "type": "string",
                                    "description": "User role"
                                  }
                                },
                                "required": ["name"]
                              },
                              "fullProps": {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "name": { "type": "string" },
                                      "email": { "type": "string" },
                                      "avatar": { "type": "string" },
                                      "role": { "type": "string" },
                                      "bio": { "type": "string" }
                                    },
                                    "description": "Complete user information"
                                  },
                                  "showActions": {
                                    "type": "boolean",
                                    "description": "Whether to show action buttons",
                                    "default": true
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "Additional metadata for the profile"
                                  }
                                },
                                "required": ["user"]
                              }
                            }
                          }
                        },
                        "contextConfig": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 255,
                              "pattern": "^[a-zA-Z0-9_-]+$",
                              "description": "URL-safe resource identifier"
                            },
                            "name": { "type": "string" },
                            "description": { "type": "string" },
                            "requestContextSchema": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            },
                            "contextVariables": {
                              "anyOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "nullable": true },
                                {
                                  "type": "object",
                                  "additionalProperties": { "nullable": true }
                                },
                                {
                                  "type": "array",
                                  "items": { "nullable": true }
                                },
                                { "nullable": true }
                              ]
                            }
                          },
                          "required": ["id", "name", "description"],
                          "example": {
                            "id": "user-context-config",
                            "name": "User Context Configuration",
                            "description": "Context configuration for user authentication and preferences",
                            "requestContextSchema": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "description": "User identifier"
                                },
                                "sessionToken": {
                                  "type": "string",
                                  "description": "Session token for authentication"
                                }
                              },
                              "required": ["userId"]
                            },
                            "contextVariables": {
                              "userProfile": {
                                "id": "user-profile",
                                "name": "User Profile",
                                "trigger": "initialization",
                                "fetchConfig": {
                                  "url": "https://api.example.com/users/{{requestContext.userId}}",
                                  "method": "GET",
                                  "headers": {
                                    "Authorization": "Bearer {{requestContext.sessionToken}}"
                                  }
                                },
                                "defaultValue": { "name": "Anonymous User" }
                              }
                            }
                          }
                        }
                      },
                      "required": ["id", "name", "agents", "tools"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Full Graph",
        "operationId": "delete-full-graph",
        "tags": ["CRUD Full Graph"],
        "description": "Delete a complete agent graph and cascade to all related entities (relationships, not agents/tools)",
        "parameters": [
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "tenantId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": { "type": "string" },
            "required": true,
            "name": "graphId",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Graph deleted successfully" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Forbidden" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/oauth/callback": {
      "get": {
        "summary": "OAuth authorization callback",
        "description": "Handles OAuth authorization codes and completes the authentication flow",
        "operationId": "oauth-callback",
        "tags": ["OAuth"],
        "parameters": [
          {
            "schema": { "type": "string", "minLength": 1 },
            "required": true,
            "name": "code",
            "in": "query"
          },
          {
            "schema": { "type": "string", "minLength": 1 },
            "required": true,
            "name": "state",
            "in": "query"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "error",
            "in": "query"
          },
          {
            "schema": { "type": "string" },
            "required": false,
            "name": "error_description",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to frontend after successful OAuth"
          },
          "400": {
            "description": "OAuth error or invalid request",
            "content": { "text/html": { "schema": { "type": "string" } } }
          },
          "500": {
            "description": "Internal server error",
            "content": { "text/html": { "schema": { "type": "string" } } }
          }
        }
      }
    }
  }
}
