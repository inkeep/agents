# Fix of changesets issue https://github.com/changesets/changesets/issues/1011
diff --git a/dist/changesets-assemble-release-plan.cjs.js b/dist/changesets-assemble-release-plan.cjs.js
index e07ba6e793021b6cfdec898afca517e293386ddb..ca4931119553c435199dcba3f5e37eadafa800f1 100644
--- a/dist/changesets-assemble-release-plan.cjs.js
+++ b/dist/changesets-assemble-release-plan.cjs.js
@@ -321,8 +321,7 @@ function shouldBumpMajor({
   return depType === "peerDependencies" && nextRelease.type !== "none" && nextRelease.type !== "patch" && (
   // 1. If onlyUpdatePeerDependentsWhenOutOfRange set to true, bump major if the version is leaving the range.
   // 2. If onlyUpdatePeerDependentsWhenOutOfRange set to false, bump major regardless whether or not the version is leaving the range.
-  !onlyUpdatePeerDependentsWhenOutOfRange || !semverSatisfies__default["default"](incrementVersion(nextRelease, preInfo), versionRange)) && (
-  // bump major only if the dependent doesn't already has a major release.
+  !onlyUpdatePeerDependentsWhenOutOfRange) && ( // bump major only if the dependent doesn't already has a major release.
   !releases.has(dependent) || releases.has(dependent) && releases.get(dependent).type !== "major");
 }

@@ -411,7 +410,7 @@ function matchFixedConstraint(releases, packagesByName, config) {

 function getPreVersion(version) {
   let parsed = semverParse__default["default"](version);
-  let preVersion = parsed.prerelease[1] === undefined ? -1 : parsed.prerelease[1];
+  let preVersion = parsed?.prerelease[1] === undefined ? -1 : parsed.prerelease[1];
   if (typeof preVersion !== "number") {
     throw new errors.InternalError("preVersion is not a number");
   }
