name: Test Optimized v2

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Build once, use in parallel jobs
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      # Create necessary directories for postinstall scripts
      - name: Prepare directories
        run: |
          mkdir -p agents-docs/.source
          touch agents-docs/.source/index.ts
      
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      # Cache build outputs
      - name: Setup build cache
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            **/dist
            **/build
            **/.turbo
            !**/*.db
            !**/*.sqlite
            !**/local.db
            !**/test.db
          key: ${{ runner.os }}-build-v4-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml', 'turbo.json') }}-${{ hashFiles('**/src/**/*.ts', '**/src/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-build-v4-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml', 'turbo.json') }}
            ${{ runner.os }}-build-v4-
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      # Build only if not cached
      - name: Build packages
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: pnpm build --concurrency=200% --force
        env:
          TURBO_TELEMETRY_DISABLED: 1
          TURBO_CACHE_DIR: .turbo
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          NODE_OPTIONS: --max-old-space-size=4096

  # Run tests in parallel with typecheck
  test:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Prepare directories
        run: |
          mkdir -p agents-docs/.source
          touch agents-docs/.source/index.ts
      
      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            **/dist
            **/build
            **/.turbo
            !**/*.db
            !**/*.sqlite
            !**/local.db
            !**/test.db
          key: ${{ runner.os }}-build-v4-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml', 'turbo.json') }}-${{ hashFiles('**/src/**/*.ts', '**/src/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-build-v4-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml', 'turbo.json') }}
            ${{ runner.os }}-build-v4-
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Clean database files
        run: |
          echo "Cleaning up any existing database files..."
          find . -name "*.db" -o -name "*.sqlite" | grep -v node_modules | xargs -r rm -f
      
      - name: Run tests
        run: pnpm test
        env:
          TURBO_TELEMETRY_DISABLED: 1
          TURBO_CACHE_DIR: .turbo
          ENVIRONMENT: test
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'sk-test-key-for-ci-testing' }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY || 'sk-ant-test-key-for-ci-testing' }}
          DB_FILE_NAME: test.db
          NODE_OPTIONS: --max-old-space-size=4096

  typecheck:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Prepare directories
        run: |
          mkdir -p agents-docs/.source
          touch agents-docs/.source/index.ts
      
      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            **/dist
            **/build
            **/.turbo
            !**/*.db
            !**/*.sqlite
            !**/local.db
            !**/test.db
          key: ${{ runner.os }}-build-v4-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml', 'turbo.json') }}-${{ hashFiles('**/src/**/*.ts', '**/src/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-build-v4-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml', 'turbo.json') }}
            ${{ runner.os }}-build-v4-
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run typecheck
        run: pnpm typecheck
        env:
          TURBO_TELEMETRY_DISABLED: 1
          TURBO_CACHE_DIR: .turbo
          NODE_OPTIONS: --max-old-space-size=4096
